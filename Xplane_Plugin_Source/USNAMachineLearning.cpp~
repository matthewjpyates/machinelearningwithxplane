/* 
 * The USNA XPlane Machine Learning Plugin
 * writen by Midshipmen 1/C Yates
 * project advisor Dr. Gavin Taylor
 */

#include "XPLMPlugin.h"
#include "XPLMDisplay.h"
#include "XPLMGraphics.h"
#include "XPWidgets.h"
#include "XPStandardWidgets.h"
#include "XPLMScenery.h"
#include "XPLMProcessing.h"
#include "XPLMDataAccess.h"
#include "XPLMUtilities.h"
#include <math.h>
#include <time.h>
#include <stdio.h>
#include <string.h>
#include "tinyxml.h"
#include <vector>
#include <stdlib.h>
#include <string>
#include <iostream>
#include <sstream>
#include <fstream>
using namespace std;

// needed constants
const float Pi = 3.14159265358979;
const float RadToDeg = 180.0 / Pi;
const float DegToRad = 1.0 / RadToDeg;



float stepsum = 0;
int xplround =0;
double timeFactor =0;
double runwayElevation =0;
bool isFirst = true;

string convertInt(int number)
{
   stringstream ss;
   ss << number;
   return ss.str();
}

string convertFloat(float number)
{
   stringstream ss;
   ss << number;
   return ss.str();
}

void  stringToFile(string fileName, string txtToWrite) 
{
	std::ofstream outfile;
	outfile.open(fileName.c_str(), std::ios_base::app);
	outfile << txtToWrite; 
	outfile.close();
}

/// takes a file name and converts it into a vector of strings one for each line
vector<string> fileToVectorOfStrings(string file_name)
{
    ifstream infile(file_name.c_str());
    string line;
    vector<string> out;
    while (std::getline(infile, line))
    {
        out.push_back(line);
    }
    return out;
}

// data types for position
typedef struct _QUATERNION
{
	float w;
	float x;
	float y;
	float z;
} QUATERNION;

typedef struct _HPR
{
	float Heading;
	float Pitch;
	float Roll;
} HPR;




// converts the 4 element quaternion into roll pitch and yaw
void QuaternionToHPR(QUATERNION quaternion, HPR *phpr)
{
	double local_w = quaternion.w;
	double local_x = quaternion.x;
	double local_y = quaternion.y;
	double local_z = quaternion.z;

	double sq_w = local_w * local_w;
	double sq_x = local_x * local_x;
	double sq_y = local_y * local_y;
	double sq_z = local_z * local_z;

	phpr->Heading = atan2(2.0 * (local_x * local_y + local_z * local_w),
			(sq_x - sq_y - sq_z + sq_w)) * RadToDeg;
	phpr->Pitch = asin(-2.0 * (local_x * local_z - local_y * local_w)) 
		* RadToDeg;
	phpr->Roll = atan2(2.0 * (local_y * local_z + local_x * local_w),
			(-sq_x - sq_y + sq_z + sq_w)) * RadToDeg;
}

// converts roll pitch and yaw back into a quaternion
void HPRToQuaternion(HPR hpr, QUATERNION *pquaternion)
{
	double local_Heading = hpr.Heading * DegToRad;
	double local_Pitch = hpr.Pitch * DegToRad;
	double local_Roll = hpr.Roll * DegToRad;

	double Cosine1 = cos(local_Roll / 2);
	double Cosine2 = cos(local_Pitch / 2);
	double Cosine3 = cos(local_Heading / 2); 
	double Sine1 = sin(local_Roll / 2);
	double Sine2 = sin(local_Pitch / 2);
	double Sine3 = sin(local_Heading / 2);

	pquaternion->w = Cosine1 * Cosine2 * Cosine3 + Sine1 * Sine2 * Sine3;
	pquaternion->x = Sine1 * Cosine2 * Cosine3 - Cosine1 * Sine2 * Sine3;
	pquaternion->y = Cosine1 * Sine2 * Cosine3 + Sine1 * Cosine2 * Sine3;
	pquaternion->z = Cosine1 * Cosine2 * Sine3 - Sine1 * Sine2 * Cosine3;
}


// the datapoint class is the wrapper for datarefs 
// and for custom values that are a little confusing to get out of Xplane
class DataPoint {
	public:
	string name;
	DataPoint (string ref)
	{
		name = ref;
	}
	void set(float in)
	{
		if(name.compare("speed")==0 || name.compare("time")==0)
		{}
		else if(name.compare("elevation")==0)
		{
			XPLMSetDataf(XPLMFindDataRef("sim/flightmodel/position/elevation"),in);
		}
		else if(name.compare("pitch")==0)
		{
			QUATERNION q1;
			HPR hpr;
			float FloatVals[4];
			int count = XPLMGetDatavf(XPLMFindDataRef("sim/flightmodel/position/q"), FloatVals, 0, 4);
			q1.w = FloatVals[0];
			q1.x = FloatVals[1];
			q1.y = FloatVals[2];
			q1.z = FloatVals[3];
			QuaternionToHPR(q1, &hpr);
			hpr.Pitch = in;
			HPRToQuaternion(hpr, &q1);
			FloatVals[0] = q1.w;
			FloatVals[1] = q1.x;
			FloatVals[2] = q1.y;
			FloatVals[3] = q1.z;
			XPLMSetDatavf(XPLMFindDataRef("sim/flightmodel/position/q"), FloatVals,0,4);
		}
		else if(name.compare("yaw")==0)
		{
			QUATERNION q1;
			HPR hpr;
			float FloatVals[4];
			int count = XPLMGetDatavf(XPLMFindDataRef("sim/flightmodel/position/q"), FloatVals, 0, 4);
			q1.w = FloatVals[0];
			q1.x = FloatVals[1];
			q1.y = FloatVals[2];
			q1.z = FloatVals[3];
			QuaternionToHPR(q1, &hpr);
			hpr.Heading = in;
			HPRToQuaternion(hpr, &q1);
			FloatVals[0] = q1.w;
			FloatVals[1] = q1.x;
			FloatVals[2] = q1.y;
			FloatVals[3] = q1.z;
			XPLMSetDatavf(XPLMFindDataRef("sim/flightmodel/position/q"), FloatVals,0,4);
		}
		else if(name.compare("roll")==0)
		{
			QUATERNION q1;
			HPR hpr;
			float FloatVals[4];
			int count = XPLMGetDatavf(XPLMFindDataRef("sim/flightmodel/position/q"), FloatVals, 0, 4);
			q1.w = FloatVals[0];
			q1.x = FloatVals[1];
			q1.y = FloatVals[2];
			q1.z = FloatVals[3];
			QuaternionToHPR(q1, &hpr);
			hpr.Roll = in;
			HPRToQuaternion(hpr, &q1);
			FloatVals[0] = q1.w;
			FloatVals[1] = q1.x;
			FloatVals[2] = q1.y;
			FloatVals[3] = q1.z;
			XPLMSetDatavf(XPLMFindDataRef("sim/flightmodel/position/q"), FloatVals,0,4);
		}
		else
		{
			XPLMSetDataf(XPLMFindDataRef(name.c_str()),in);

		}
		XPLMFindDataRef("sim/flightmodel/position/q");
		QUATERNION q1;
		HPR hpr;
		float FloatVals[4];

		int count = XPLMGetDatavf(XPLMFindDataRef("sim/flightmodel/position/q"), FloatVals, 0, 4);
		q1.w = FloatVals[0];
		q1.x = FloatVals[1];
		q1.y = FloatVals[2];
		q1.z = FloatVals[3];
		QuaternionToHPR(q1, &hpr);
	}

	double get() 
	{
		if(name.compare("time")==0)
		{
			return XPLMGetElapsedTime()- timeFactor;
		}
		else if(name.compare("speed")==0)
		{
			double vx = XPLMGetDataf(XPLMFindDataRef("sim/flightmodel/position/local_vx"));
			double vy = XPLMGetDataf(XPLMFindDataRef("sim/flightmodel/position/local_vy"));
			double vz = XPLMGetDataf(XPLMFindDataRef("sim/flightmodel/position/local_vz"));
			return sqrt((vx * vx) + (vy * vy) + (vz * vz));	
		}
		else if(name.compare("elevation")==0)
		{
			return XPLMGetDataf(XPLMFindDataRef("sim/flightmodel/position/elevation"))- runwayElevation;
		}
		else if(name.compare("pitch")==0)
		{
			QUATERNION q1;
			HPR hpr;
			float FloatVals[4];

			int count = XPLMGetDatavf(XPLMFindDataRef("sim/flightmodel/position/q"), FloatVals, 0, 4);
			q1.w = FloatVals[0];
			q1.x = FloatVals[1];
			q1.y = FloatVals[2];
			q1.z = FloatVals[3];
			QuaternionToHPR(q1, &hpr);
			return hpr.Pitch;
		}
		else if(name.compare("yaw")==0)
		{
			QUATERNION q1;
			HPR hpr;
			float FloatVals[4];

			int count = XPLMGetDatavf(XPLMFindDataRef("sim/flightmodel/position/q"), FloatVals, 0, 4);
			q1.w = FloatVals[0];
			q1.x = FloatVals[1];
			q1.y = FloatVals[2];
			q1.z = FloatVals[3];
			QuaternionToHPR(q1, &hpr);
			return hpr.Heading;
		}
		else if(name.compare("roll")==0)
		{
			QUATERNION q1;
			HPR hpr;
			float FloatVals[4];

			int count = XPLMGetDatavf(XPLMFindDataRef("sim/flightmodel/position/q"), FloatVals, 0, 4);
			q1.w = FloatVals[0];
			q1.x = FloatVals[1];
			q1.y = FloatVals[2];
			q1.z = FloatVals[3];
			QuaternionToHPR(q1, &hpr);
			return hpr.Roll;
		}
		else
		{
			return XPLMGetDataf(XPLMFindDataRef(name.c_str()));
		}
	}
};
vector<string> cmdKeyArray;
// builds a number for what key name goes with what number
void makecmdKeyArray() {  // 95 elements
cmdKeyArray = fileToVectorOfStrings("XPLMCommandKeyID.lst");
/*
	cmdKeyArray.push_back("xplm_key_pause=0");
	cmdKeyArray.push_back("xplm_key_revthrust");
	cmdKeyArray.push_back("xplm_key_jettison");
	cmdKeyArray.push_back("xplm_key_brakesreg");
	cmdKeyArray.push_back("xplm_key_brakesmax");
	cmdKeyArray.push_back("xplm_key_gear");
	cmdKeyArray.push_back("xplm_key_timedn");
	cmdKeyArray.push_back("xplm_key_timeup");
	cmdKeyArray.push_back("xplm_key_fadec");
	cmdKeyArray.push_back("xplm_key_otto_dis");
	cmdKeyArray.push_back("xplm_key_otto_atr");
	cmdKeyArray.push_back("xplm_key_otto_asi");
	cmdKeyArray.push_back("xplm_key_otto_hdg");
	cmdKeyArray.push_back("xplm_key_otto_gps");
	cmdKeyArray.push_back("xplm_key_otto_lev");
	cmdKeyArray.push_back("xplm_key_otto_hnav");
	cmdKeyArray.push_back("xplm_key_otto_alt");
	cmdKeyArray.push_back("xplm_key_otto_vvi");
	cmdKeyArray.push_back("xplm_key_otto_vnav");
	cmdKeyArray.push_back("xplm_key_otto_nav1");
	cmdKeyArray.push_back("xplm_key_otto_nav2");
	cmdKeyArray.push_back("xplm_key_targ_dn");
	cmdKeyArray.push_back("xplm_key_targ_up");
	cmdKeyArray.push_back("xplm_key_hdgdn");
	cmdKeyArray.push_back("xplm_key_hdgup");
	cmdKeyArray.push_back("xplm_key_barodn");
	cmdKeyArray.push_back("xplm_key_baroup");
	cmdKeyArray.push_back("xplm_key_obs1dn");
	cmdKeyArray.push_back("xplm_key_obs1up");
	cmdKeyArray.push_back("xplm_key_obs2dn");
	cmdKeyArray.push_back("xplm_key_obs2up");
	cmdKeyArray.push_back("xplm_key_com1_1");
	cmdKeyArray.push_back("xplm_key_com1_2");
	cmdKeyArray.push_back("xplm_key_com1_3");
	cmdKeyArray.push_back("xplm_key_com1_4");
	cmdKeyArray.push_back("xplm_key_nav1_1");
	cmdKeyArray.push_back("xplm_key_nav1_2");
	cmdKeyArray.push_back("xplm_key_nav1_3");
	cmdKeyArray.push_back("xplm_key_nav1_4");
	cmdKeyArray.push_back("xplm_key_com2_1");
	cmdKeyArray.push_back("xplm_key_com2_2");
	cmdKeyArray.push_back("xplm_key_com2_3");
	cmdKeyArray.push_back("xplm_key_com2_4");
	cmdKeyArray.push_back("xplm_key_nav2_1");
	cmdKeyArray.push_back("xplm_key_nav2_2");
	cmdKeyArray.push_back("xplm_key_nav2_3");
	cmdKeyArray.push_back("xplm_key_nav2_4");
	cmdKeyArray.push_back("xplm_key_adf_1");
	cmdKeyArray.push_back("xplm_key_adf_2");
	cmdKeyArray.push_back("xplm_key_adf_3");
	cmdKeyArray.push_back("xplm_key_adf_4");
	cmdKeyArray.push_back("xplm_key_adf_5");
	cmdKeyArray.push_back("xplm_key_adf_6");
	cmdKeyArray.push_back("xplm_key_transpon_1");
	cmdKeyArray.push_back("xplm_key_transpon_2");
	cmdKeyArray.push_back("xplm_key_transpon_3");
	cmdKeyArray.push_back("xplm_key_transpon_4");
	cmdKeyArray.push_back("xplm_key_transpon_5");
	cmdKeyArray.push_back("xplm_key_transpon_6");
	cmdKeyArray.push_back("xplm_key_transpon_7");
	cmdKeyArray.push_back("xplm_key_transpon_8");
	cmdKeyArray.push_back("xplm_key_flapsup");
	cmdKeyArray.push_back("xplm_key_flapsdn");
	cmdKeyArray.push_back("xplm_key_cheatoff");
	cmdKeyArray.push_back("xplm_key_cheaton");
	cmdKeyArray.push_back("xplm_key_sbrkoff");
	cmdKeyArray.push_back("xplm_key_sbrkon");
	cmdKeyArray.push_back("xplm_key_ailtrimL");
	cmdKeyArray.push_back("xplm_key_ailtrimR");
	cmdKeyArray.push_back("xplm_key_rudtrimL");
	cmdKeyArray.push_back("xplm_key_rudtrimR");
	cmdKeyArray.push_back("xplm_key_elvtrimD");
	cmdKeyArray.push_back("xplm_key_elvtrimU");
	cmdKeyArray.push_back("xplm_key_forward");
	cmdKeyArray.push_back("xplm_key_down");
	cmdKeyArray.push_back("xplm_key_left");
	cmdKeyArray.push_back("xplm_key_right");
	cmdKeyArray.push_back("xplm_key_back");
	cmdKeyArray.push_back("xplm_key_tower");
	cmdKeyArray.push_back("xplm_key_runway");
	cmdKeyArray.push_back("xplm_key_chase");
	cmdKeyArray.push_back("xplm_key_free1");
	cmdKeyArray.push_back("xplm_key_free2");
	cmdKeyArray.push_back("xplm_key_spot");
	cmdKeyArray.push_back("xplm_key_fullscrn1");
	cmdKeyArray.push_back("xplm_key_fullscrn2");
	cmdKeyArray.push_back("xplm_key_tanspan");
	cmdKeyArray.push_back("xplm_key_smoke");
	cmdKeyArray.push_back("xplm_key_map");
	cmdKeyArray.push_back("xplm_key_zoomin");
	cmdKeyArray.push_back("xplm_key_zoomout");
	cmdKeyArray.push_back("xplm_key_cycledump");
	cmdKeyArray.push_back("xplm_key_replay");
	cmdKeyArray.push_back("xplm_key_tranID");
	cmdKeyArray.push_back("xplm_key_max");
*/
}
vector<string> cmdButtonArray;
// builds a vector for looking up what number goes with what
// button
void makecmdButtonArray()
{	
cmdButtonArray = fileToVectorOfStrings("XPLMCommandButtonID.lst");
/*
	cmdButtonArray.push_back("xplm_joy_nothing=0");
	cmdButtonArray.push_back("xplm_joy_start_all");
	cmdButtonArray.push_back("xplm_joy_start_0");
	cmdButtonArray.push_back("xplm_joy_start_1");
	cmdButtonArray.push_back("xplm_joy_start_2");
	cmdButtonArray.push_back("xplm_joy_start_3");
	cmdButtonArray.push_back("xplm_joy_start_4");
	cmdButtonArray.push_back("xplm_joy_start_5");
	cmdButtonArray.push_back("xplm_joy_start_6");
	cmdButtonArray.push_back("xplm_joy_start_7");
	cmdButtonArray.push_back("xplm_joy_throt_up");
	cmdButtonArray.push_back("xplm_joy_throt_dn");
	cmdButtonArray.push_back("xplm_joy_prop_up");
	cmdButtonArray.push_back("xplm_joy_prop_dn");
	cmdButtonArray.push_back("xplm_joy_mixt_up");
	cmdButtonArray.push_back("xplm_joy_mixt_dn");
	cmdButtonArray.push_back("xplm_joy_carb_tog");
	cmdButtonArray.push_back("xplm_joy_carb_on");
	cmdButtonArray.push_back("xplm_joy_carb_off");
	cmdButtonArray.push_back("xplm_joy_trev");
	cmdButtonArray.push_back("xplm_joy_trm_up");
	cmdButtonArray.push_back("xplm_joy_trm_dn");
	cmdButtonArray.push_back("xplm_joy_rot_trm_up");
	cmdButtonArray.push_back("xplm_joy_rot_trm_dn");
	cmdButtonArray.push_back("xplm_joy_rud_lft");
	cmdButtonArray.push_back("xplm_joy_rud_cntr");
	cmdButtonArray.push_back("xplm_joy_rud_rgt");
	cmdButtonArray.push_back("xplm_joy_ail_lft");
	cmdButtonArray.push_back("xplm_joy_ail_cntr");
	cmdButtonArray.push_back("xplm_joy_ail_rgt");
	cmdButtonArray.push_back("xplm_joy_B_rud_lft");
	cmdButtonArray.push_back("xplm_joy_B_rud_rgt");
	cmdButtonArray.push_back("xplm_joy_look_up");
	cmdButtonArray.push_back("xplm_joy_look_dn");
	cmdButtonArray.push_back("xplm_joy_look_lft");
	cmdButtonArray.push_back("xplm_joy_look_rgt");
	cmdButtonArray.push_back("xplm_joy_glance_l");
	cmdButtonArray.push_back("xplm_joy_glance_r");
	cmdButtonArray.push_back("xplm_joy_v_fnh");
	cmdButtonArray.push_back("xplm_joy_v_fwh");
	cmdButtonArray.push_back("xplm_joy_v_tra");
	cmdButtonArray.push_back("xplm_joy_v_twr");
	cmdButtonArray.push_back("xplm_joy_v_run");
	cmdButtonArray.push_back("xplm_joy_v_cha");
	cmdButtonArray.push_back("xplm_joy_v_fr1");
	cmdButtonArray.push_back("xplm_joy_v_fr2");
	cmdButtonArray.push_back("xplm_joy_v_spo");
	cmdButtonArray.push_back("xplm_joy_flapsup");
	cmdButtonArray.push_back("xplm_joy_flapsdn");
	cmdButtonArray.push_back("xplm_joy_vctswpfwd");
	cmdButtonArray.push_back("xplm_joy_vctswpaft");
	cmdButtonArray.push_back("xplm_joy_gear_tog");
	cmdButtonArray.push_back("xplm_joy_gear_up");
	cmdButtonArray.push_back("xplm_joy_gear_down");
	cmdButtonArray.push_back("xplm_joy_lft_brake");
	cmdButtonArray.push_back("xplm_joy_rgt_brake");
	cmdButtonArray.push_back("xplm_joy_brakesREG");
	cmdButtonArray.push_back("xplm_joy_brakesMAX");
	cmdButtonArray.push_back("xplm_joy_speedbrake");
	cmdButtonArray.push_back("xplm_joy_ott_dis");
	cmdButtonArray.push_back("xplm_joy_ott_atr");
	cmdButtonArray.push_back("xplm_joy_ott_asi");
	cmdButtonArray.push_back("xplm_joy_ott_hdg");
	cmdButtonArray.push_back("xplm_joy_ott_alt");
	cmdButtonArray.push_back("xplm_joy_ott_vvi");
	cmdButtonArray.push_back("xplm_joy_tim_start");
	cmdButtonArray.push_back("xplm_joy_tim_reset");
	cmdButtonArray.push_back("xplm_joy_ecam_up");
	cmdButtonArray.push_back("xplm_joy_ecam_dn");
	cmdButtonArray.push_back("xplm_joy_fadec");
	cmdButtonArray.push_back("xplm_joy_yaw_damp");
	cmdButtonArray.push_back("xplm_joy_art_stab");
	cmdButtonArray.push_back("xplm_joy_chute");
	cmdButtonArray.push_back("xplm_joy_JATO");
	cmdButtonArray.push_back("xplm_joy_arrest");
	cmdButtonArray.push_back("xplm_joy_jettison");
	cmdButtonArray.push_back("xplm_joy_fuel_dump");
	cmdButtonArray.push_back("xplm_joy_puffsmoke");
	cmdButtonArray.push_back("xplm_joy_prerotate");
	cmdButtonArray.push_back("xplm_joy_UL_prerot");
	cmdButtonArray.push_back("xplm_joy_UL_collec");
	cmdButtonArray.push_back("xplm_joy_TOGA");
	cmdButtonArray.push_back("xplm_joy_shutdown");
	cmdButtonArray.push_back("xplm_joy_con_atc");
	cmdButtonArray.push_back("xplm_joy_fail_now");
	cmdButtonArray.push_back("xplm_joy_pause");
	cmdButtonArray.push_back("xplm_joy_rock_up");
	cmdButtonArray.push_back("xplm_joy_rock_dn");
	cmdButtonArray.push_back("xplm_joy_rock_lft");
	cmdButtonArray.push_back("xplm_joy_rock_rgt");
	cmdButtonArray.push_back("xplm_joy_rock_for");
	cmdButtonArray.push_back("xplm_joy_rock_aft");
	cmdButtonArray.push_back("xplm_joy_idle_hilo");
	cmdButtonArray.push_back("xplm_joy_lanlights");
	cmdButtonArray.push_back("xplm_joy_max");
*/
	return;
}
// converts human readable strings to ints that Xplane can use
int findButtonInt(string buttonToBePressed)
{
	for(int ii=0; ii<buttonToBePressed.size(); ii++)
	{
		if(buttonToBePressed.compare(cmdButtonArray[ii])==0)
			return ii;
	}
	return -1;
}
// the XMl will read in the name of the keys
// but Xplane needs enums for to interact with
int findKeyInt(string keyToBePressed)
{
	for(int ii=0; ii<keyToBePressed.size(); ii++)
	{
		if(keyToBePressed.compare(cmdKeyArray[ii])==0)
			return ii;
	}
	return -1;
}

//file to be read 
string xmlFileName = "config.xml"; 
string pluginName = "Some random plugin name that was not set by the XML";
double recordRate = 1;
double stepRate = 1;
bool reloadEveryRun = true;
bool reloadOnChange = true;
bool debug = false;
bool isStart = true;
string outFile = "notARealFile.txt";
bool writeout = false;
// Global Varibles needed that hold the lists of datarefs
// everytime the plane resets on the runway these lists apply these value
vector<string> datarefsThatGetResetPerRun;
vector<DataPoint> dpPerRun;
vector<double> datarefsThatGetResetPerRunValues;
// values that every record step are reset
vector<string> datarefsThatGetResetPerRecord;
vector<DataPoint> dpPerRecord;
vector<double> datarefsThatGetResetPerRecordValues;
// vales that are reset every step
vector<string> datarefsThatGetResetPerStep;
vector<DataPoint> dpPerStep;
vector<double> datarefsThatGetResetPerStepValues;
// these are writen to standout every record
vector<string> datarefsThatGetMeasured;
vector<DataPoint> dpMeasured;
// these are the values that need to be changed every step 
vector<string> datarefsThatGetChanged;
vector<DataPoint> dpChanged;
vector<vector<double> > valuesThatCanBeChosen;
// these are the learned datarefs every record
vector<string> datarefsThatHaveBeenLearned;
vector<DataPoint> dpLearned;
vector<vector<string> > datarefsReadForTheDecisions; 
vector<vector<DataPoint> > dpRead;
vector<vector<vector<double> > > weightsForLearnedDatarefs;
vector<vector<double> > valuesThatCanBeChosenForLearnedDatarefs;
// buttons that need to be pressed
vector<int> buttonsPressedPerRun;
vector<int> buttonsPressedPerRecord;
vector<int> buttonsPressedPerStep;
// keys that need to be pressed
vector<int> keysPressedPerRun;
vector<int> keysPressedPerRecord;
vector<int> keysPressedPerStep;

// prints everything being measured on one line
void makeMeasurements()
{
	for (int ii =0; ii< dpMeasured.size(); ii++)
		cout <<dpMeasured[ii].get() << " ";
}
// randomly makes a choice from the allowed choices for each and every 
// sample positions
void makeGuesses()
{
	makeMeasurements();
	for (int ii =0; ii< dpChanged.size(); ii++)
	{
		int temp = rand() % valuesThatCanBeChosen[ii].size();
		dpChanged[ii].set(valuesThatCanBeChosen[ii][temp]);
		cout << temp << " ";
	}
	cout << "\n";

}

void makeMeasurements(string outf)
{
    for (int ii =0; ii< dpMeasured.size(); ii++)
        stringToFile( outf.c_str(),convertFloat(dpMeasured[ii].get()) + " ");
}


void makeGuesses(string outf)
{
	makeMeasurements(outf);
	for (int ii =0; ii< dpChanged.size(); ii++)
	{
		int temp = rand() % valuesThatCanBeChosen[ii].size();
		dpChanged[ii].set(valuesThatCanBeChosen[ii][temp]);
		stringToFile( outf.c_str(),convertInt(temp) + " ");
	}
	stringToFile( outf.c_str(),"\n");

}

// calls the button press API
void pressButtons(vector<int> buttons)
{
	for(int ii=0; ii<buttons.size(); ii++)
	{
		XPLMCommandButtonPress(buttons[ii]);
	}
	return;
}

// calles the key press API
void pressKeys(vector<int> keys)
{
	for(int ii=0; ii<keys.size(); ii++)
	{
		XPLMCommandKeyStroke(keys[ii]);
	}
	return;
}


// go through the datapoints that are read for every learned component
// and takes the measued value and multiplies it by the measured weight
// then it takes the sum of these products and if that sum is higher than
// the sum for any of the other positions it takes that choice
void makeChoices()
{
	double bestResult, result;
	int choice;
	for(int ii =0; ii< dpLearned.size(); ii++)
	{
		bestResult =0;
		for(int kk =0; kk< valuesThatCanBeChosenForLearnedDatarefs[ii].size(); kk++ )
		{
			result = 0;
			for(int jj =0; jj< dpRead[ii].size(); jj++ )
			{
				result += dpRead[ii][jj].get()*weightsForLearnedDatarefs[ii][kk][jj];
			}	
			if(kk==0 || result>bestResult)
			{
				choice =kk;
				bestResult = result;
			}
		}

		dpLearned[ii].set(valuesThatCanBeChosenForLearnedDatarefs[ii][choice]);
	}	
}

void resetDPs(vector<DataPoint> dps,  vector<double> vals)
{
	for(int ii =0; ii< dps.size(); ii++)
		dps[ii].set(vals[ii]);
}



// ----------------------------------------------------------------------
// The section below was copied and adopted from http://www.grinninglizard.com/tinyxmldocs/index.html
// It is used for seeing the stated of the XML document that is read in
// ----------------------------------------------------------------------
const unsigned int NUM_INDENTS_PER_SPACE=2;

const char * getIndent( unsigned int numIndents )
{
	static const char * pINDENT="                                      + ";
	static const unsigned int LENGTH=strlen( pINDENT );
	unsigned int n=numIndents*NUM_INDENTS_PER_SPACE;
	if ( n > LENGTH ) n = LENGTH;

	return &pINDENT[ LENGTH-n ];
}

// same as getIndent but no "+" at the end
const char * getIndentAlt( unsigned int numIndents )
{
	static const char * pINDENT="                                        ";
	static const unsigned int LENGTH=strlen( pINDENT );
	unsigned int n=numIndents*NUM_INDENTS_PER_SPACE;
	if ( n > LENGTH ) n = LENGTH;

	return &pINDENT[ LENGTH-n ];
}

int dump_attribs_to_stdout(TiXmlElement* pElement, unsigned int indent)
{
	if ( !pElement ) return 0;

	TiXmlAttribute* pAttrib=pElement->FirstAttribute();
	int i=0;
	int ival;
	double dval;
	const char* pIndent=getIndent(indent);
	printf("\n");
	while (pAttrib)
	{
		printf( "%s%s: value=[%s]", pIndent, pAttrib->Name(), pAttrib->Value());

		if (pAttrib->QueryIntValue(&ival)==TIXML_SUCCESS)    printf( " int=%d", ival);
		if (pAttrib->QueryDoubleValue(&dval)==TIXML_SUCCESS) printf( " d=%1.1f", dval);
		printf( "\n" );
		i++;
		pAttrib=pAttrib->Next();
	}
	return i;	
}

void dump_to_stdout( TiXmlNode* pParent, unsigned int indent = 0 )
{
	if ( !pParent ) return;

	TiXmlNode* pChild;
	TiXmlText* pText;
	int t = pParent->Type();
	printf( "%s", getIndent(indent));
	int num;

	switch ( t )
	{
		case /*TiXmlNode::DOCUMENT*/ 0:
			printf( "Document" );
			break;

		case /*TiXmlNode::ELEMENT*/ 1:
			printf( "Element [%s]", pParent->Value() );
			num=dump_attribs_to_stdout(pParent->ToElement(), indent+1);
			switch(num)
			{
				case 0:  printf( " (No attributes)"); break;
				case 1:  printf( "%s1 attribute", getIndentAlt(indent)); break;
				default: printf( "%s%d attributes", getIndentAlt(indent), num); break;
			}
			break;

		case /*TiXmlNode::COMMENT*/ 2:
			printf( "Comment: [%s]", pParent->Value());
			break;

		case /*TiXmlNode::UNKNOWN*/ 3:
			printf( "Unknown" );
			break;

		case /*TiXmlNode::TEXT*/ 4:
			pText = pParent->ToText();
			printf( "Text: [%s]", pText->Value() );
			break;

		case /*TiXmlNode::DECLARATION*/ 5:
			printf( "Declaration" );
			break;
		default:
			break;
	}
	printf( "\n" );
	for ( pChild = pParent->FirstChild(); pChild != 0; pChild = pChild->NextSibling()) 
	{
		dump_to_stdout( pChild, indent+1 );
	}
}

// load the named file and dump its structure to STDOUT
void dump_to_stdout(const char* pFilename)
{
	TiXmlDocument doc(pFilename);
	bool loadOkay = doc.LoadFile();
	if (loadOkay)
	{
		printf("\n%s:\n", pFilename);
		dump_to_stdout( &doc ); // defined later in the tutorial
	}
	else
	{
		printf("Failed to load file \"%s\"\n", pFilename);
	}
}


// utility to make strings lower case for
// case insensitve comparison
string toLower(string str)
{
	int differ = 'A'-'a';
	for(std::string::size_type i = 0; i < str.size(); ++i) 
	{
		str[i] -= differ;
	}	
	return str;
}

void makeDataPointsForEveryThing()
{
	// this is really bad formatting
	// sorry
dpMeasured = fileToVectorOfStrings("DataPoint.lst");
/*
dpMeasured.push_back(DataPoint("time"));
dpMeasured.push_back(DataPoint("speed"));
dpMeasured.push_back(DataPoint("elevation"));
dpMeasured.push_back(DataPoint("pitch"));
dpMeasured.push_back(DataPoint("roll"));
dpMeasured.push_back(DataPoint("yaw"));
dpMeasured.push_back(DataPoint("sim/aircraft/acf_struct"));
dpMeasured.push_back(DataPoint("sim/aircraft/view/acf_tailnum"));
dpMeasured.push_back(DataPoint("sim/aircraft/view/acf_author"));
dpMeasured.push_back(DataPoint("sim/aircraft/view/acf_descrip"));
dpMeasured.push_back(DataPoint("sim/aircraft/view/acf_notes"));
dpMeasured.push_back(DataPoint("sim/aircraft/view/acf_size_x"));
dpMeasured.push_back(DataPoint("sim/aircraft/view/acf_size_z"));
dpMeasured.push_back(DataPoint("sim/aircraft/view/acf_asi_kts"));
dpMeasured.push_back(DataPoint("sim/aircraft/view/acf_cockpit_type"));
dpMeasured.push_back(DataPoint("sim/aircraft/view/acf_has_SC_fd"));
dpMeasured.push_back(DataPoint("sim/aircraft/view/acf_has_stallwarn"));
dpMeasured.push_back(DataPoint("sim/aircraft/view/acf_has_litemap_tex"));
dpMeasured.push_back(DataPoint("sim/aircraft/view/acf_peX"));
dpMeasured.push_back(DataPoint("sim/aircraft/view/acf_peY"));
dpMeasured.push_back(DataPoint("sim/aircraft/view/acf_peZ"));
dpMeasured.push_back(DataPoint("sim/aircraft/view/acf_Vso"));
dpMeasured.push_back(DataPoint("sim/aircraft/view/acf_Vs"));
dpMeasured.push_back(DataPoint("sim/aircraft/view/acf_Vfe"));
dpMeasured.push_back(DataPoint("sim/aircraft/view/acf_Vno"));
dpMeasured.push_back(DataPoint("sim/aircraft/view/acf_Vne"));
dpMeasured.push_back(DataPoint("sim/aircraft/view/acf_Mmo"));
dpMeasured.push_back(DataPoint("sim/aircraft/view/acf_Gneg"));
dpMeasured.push_back(DataPoint("sim/aircraft/view/acf_Gpos"));
dpMeasured.push_back(DataPoint("sim/aircraft/view/acf_est_Vs"));
dpMeasured.push_back(DataPoint("sim/aircraft/view/acf_yawstringx"));
dpMeasured.push_back(DataPoint("sim/aircraft/view/acf_yawstringy"));
dpMeasured.push_back(DataPoint("sim/aircraft/view/acf_HUD_cntry"));
dpMeasured.push_back(DataPoint("sim/aircraft/view/acf_HUD_delx"));
dpMeasured.push_back(DataPoint("sim/aircraft/view/acf_HUD_dely"));
dpMeasured.push_back(DataPoint("sim/aircraft/view/acf_ICAO"));
dpMeasured.push_back(DataPoint("sim/aircraft/view/acf_door_x"));
dpMeasured.push_back(DataPoint("sim/aircraft/view/acf_door_y"));
dpMeasured.push_back(DataPoint("sim/aircraft/view/acf_door_z"));
dpMeasured.push_back(DataPoint("sim/aircraft/view/acf_has_HOOPS_HUD"));
dpMeasured.push_back(DataPoint("sim/aircraft/view/acf_livery_index"));
dpMeasured.push_back(DataPoint("sim/aircraft/view/acf_livery_path"));
dpMeasured.push_back(DataPoint("sim/aircraft/panel/acf_ins_type"));
dpMeasured.push_back(DataPoint("sim/aircraft/panel/acf_ins_size"));
dpMeasured.push_back(DataPoint("sim/aircraft/panel/acf_ins_x"));
dpMeasured.push_back(DataPoint("sim/aircraft/panel/acf_ins_y"));
dpMeasured.push_back(DataPoint("sim/aircraft/forcefeedback/acf_ff_hydraulic"));
dpMeasured.push_back(DataPoint("sim/aircraft/forcefeedback/acf_ff_stickshaker"));
dpMeasured.push_back(DataPoint("sim/aircraft/electrical/num_batteries"));
dpMeasured.push_back(DataPoint("sim/aircraft/electrical/num_generators"));
dpMeasured.push_back(DataPoint("sim/aircraft/electrical/num_inverters"));
dpMeasured.push_back(DataPoint("sim/aircraft/electrical/num_buses"));
dpMeasured.push_back(DataPoint("sim/aircraft/engine/acf_num_engines"));
dpMeasured.push_back(DataPoint("sim/aircraft/engine/acf_auto_featherEQ"));
dpMeasured.push_back(DataPoint("sim/aircraft/engine/acf_throtmax_FWD"));
dpMeasured.push_back(DataPoint("sim/aircraft/engine/acf_throtmax_REV"));
dpMeasured.push_back(DataPoint("sim/aircraft/engine/acf_RSC_mingov_eng"));
dpMeasured.push_back(DataPoint("sim/aircraft/engine/acf_RSC_idlespeed_eng"));
dpMeasured.push_back(DataPoint("sim/aircraft/engine/acf_RSC_redline_eng"));
dpMeasured.push_back(DataPoint("sim/aircraft/engine/acf_RSC_mingreen_eng"));
dpMeasured.push_back(DataPoint("sim/aircraft/engine/acf_RSC_maxgreen_eng"));
dpMeasured.push_back(DataPoint("sim/aircraft/engine/acf_pmax"));
dpMeasured.push_back(DataPoint("sim/aircraft/engine/acf_tmax"));
dpMeasured.push_back(DataPoint("sim/aircraft/engine/acf_burnerinc"));
dpMeasured.push_back(DataPoint("sim/aircraft/engine/acf_critalt"));
dpMeasured.push_back(DataPoint("sim/aircraft/engine/acf_mpmax"));
dpMeasured.push_back(DataPoint("sim/aircraft/engine/acf_gear_rat"));
dpMeasured.push_back(DataPoint("sim/aircraft/engine/acf_face_jet"));
dpMeasured.push_back(DataPoint("sim/aircraft/engine/acf_face_rocket"));
dpMeasured.push_back(DataPoint("sim/aircraft/engine/acf_spooltime_jet"));
dpMeasured.push_back(DataPoint("sim/aircraft/engine/acf_max_mach_eff"));
dpMeasured.push_back(DataPoint("sim/aircraft/engine/acf_fmax_sl"));
dpMeasured.push_back(DataPoint("sim/aircraft/engine/acf_fmax_opt"));
dpMeasured.push_back(DataPoint("sim/aircraft/engine/acf_fmax_vac"));
dpMeasured.push_back(DataPoint("sim/aircraft/engine/acf_h_opt"));
dpMeasured.push_back(DataPoint("sim/aircraft/engine/aacf_tip_mach_des_50"));
dpMeasured.push_back(DataPoint("sim/aircraft/engine/aacf_tip_mach_des_100"));
dpMeasured.push_back(DataPoint("sim/aircraft/engine/aacf_rotor_mi_rat"));
dpMeasured.push_back(DataPoint("sim/aircraft/engine/aacf_tip_weight"));
dpMeasured.push_back(DataPoint("sim/aircraft/engine/acf_max_ITT"));
dpMeasured.push_back(DataPoint("sim/aircraft/engine/acf_max_EGT"));
dpMeasured.push_back(DataPoint("sim/aircraft/engine/acf_max_CHT"));
dpMeasured.push_back(DataPoint("sim/aircraft/engine/acf_max_OILP"));
dpMeasured.push_back(DataPoint("sim/aircraft/engine/acf_max_OILT"));
dpMeasured.push_back(DataPoint("sim/aircraft/engine/acf_max_FUELP"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/green_lo_MP"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/green_hi_MP"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/yellow_lo_MP"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/yellow_hi_MP"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/red_lo_MP"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/red_hi_MP"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/green_lo_EPR"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/green_hi_EPR"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/yellow_lo_EPR"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/yellow_hi_EPR"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/red_lo_EPR"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/red_hi_EPR"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/green_lo_TRQ"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/green_hi_TRQ"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/yellow_lo_TRQ"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/yellow_hi_TRQ"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/red_lo_TRQ"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/red_hi_TRQ"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/green_lo_FF"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/green_hi_FF"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/yellow_lo_FF"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/yellow_hi_FF"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/red_lo_FF"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/red_hi_FF"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/green_lo_ITT"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/green_hi_ITT"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/yellow_lo_ITT"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/yellow_hi_ITT"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/red_lo_ITT"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/red_hi_ITT"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/green_lo_EGT"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/green_hi_EGT"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/yellow_lo_EGT"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/yellow_hi_EGT"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/red_lo_EGT"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/red_hi_EGT"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/green_lo_CHT"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/green_hi_CHT"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/yellow_lo_CHT"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/yellow_hi_CHT"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/red_lo_CHT"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/red_hi_CHT"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/green_lo_oilT"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/green_hi_oilT"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/yellow_lo_oilT"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/yellow_hi_oilT"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/red_lo_oilT"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/red_hi_oilT"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/green_lo_oilP"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/green_hi_oilP"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/yellow_lo_oilP"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/yellow_hi_oilP"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/red_lo_oilP"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/red_hi_oilP"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/green_lo_fuelP"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/green_hi_fuelP"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/yellow_lo_fuelP"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/yellow_hi_fuelP"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/red_lo_fuelP"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/red_hi_fuelP"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/green_lo_gen_amp"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/green_hi_gen_amp"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/yellow_lo_gen_amp"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/yellow_hi_gen_amp"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/red_lo_gen_amp"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/red_hi_gen_amp"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/max_gen_amp"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/green_lo_bat_amp"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/green_hi_bat_amp"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/yellow_lo_bat_amp"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/yellow_hi_bat_amp"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/red_lo_bat_amp"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/red_hi_bat_amp"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/max_bat_amp"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/green_lo_bat_volt"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/green_hi_bat_volt"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/yellow_lo_bat_volt"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/yellow_hi_bat_volt"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/red_lo_bat_volt"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/red_hi_bat_volt"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/max_bat_volt_standard"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/green_lo_vac"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/green_hi_vac"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/yellow_lo_vac"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/yellow_hi_vac"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/red_lo_vac"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/red_hi_vac"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/max_vac"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/green_lo_N1"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/green_hi_N1"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/yellow_lo_N1"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/yellow_hi_N1"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/red_lo_N1"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/red_hi_N1"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/green_lo_N2"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/green_hi_N2"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/yellow_lo_N2"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/yellow_hi_N2"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/red_lo_N2"));
dpMeasured.push_back(DataPoint("sim/aircraft/limits/red_hi_N2"));
dpMeasured.push_back(DataPoint("sim/aircraft/prop/acf_en_type"));
dpMeasured.push_back(DataPoint("sim/aircraft/prop/acf_revthrust_eq"));
dpMeasured.push_back(DataPoint("sim/aircraft/prop/acf_prop_type"));
dpMeasured.push_back(DataPoint("sim/aircraft/prop/acf_prop_gear_rat"));
dpMeasured.push_back(DataPoint("sim/aircraft/prop/acf_prop_dir"));
dpMeasured.push_back(DataPoint("sim/aircraft/prop/acf_num_blades"));
dpMeasured.push_back(DataPoint("sim/aircraft/prop/acf_min_pitch"));
dpMeasured.push_back(DataPoint("sim/aircraft/prop/acf_max_pitch"));
dpMeasured.push_back(DataPoint("sim/aircraft/prop/acf_reversed_pitch"));
dpMeasured.push_back(DataPoint("sim/aircraft/prop/acf_sidecant"));
dpMeasured.push_back(DataPoint("sim/aircraft/prop/acf_vertcant"));
dpMeasured.push_back(DataPoint("sim/aircraft/prop/acf_prop_mass"));
dpMeasured.push_back(DataPoint("sim/aircraft/prop/acf_miprop_rpm"));
dpMeasured.push_back(DataPoint("sim/aircraft/prop/acf_discarea"));
dpMeasured.push_back(DataPoint("sim/aircraft/prop/acf_ringarea"));
dpMeasured.push_back(DataPoint("sim/aircraft/prop/acf_des_rpm_prp"));
dpMeasured.push_back(DataPoint("sim/aircraft/prop/acf_des_kts_acf"));
dpMeasured.push_back(DataPoint("sim/aircraft/prop/acf_part_eq"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_Rafl0"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_Rafl1"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_Tafl0"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_Tafl1"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_els"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_Xarm"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_Yarm"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_Zarm"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_X_body_aero"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_Y_body_aero"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_Z_body_aero"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_Croot"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_Ctip"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_dihed1"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_sweep1"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_sweep2"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_semilen_SEG"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_semilen_JND"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_e"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_AR"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_delta_fac"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_slat_effect"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_s"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_mac"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_anginc"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_flapEQ"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_slatEQ"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_sbrkEQ"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_ail1"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_ail2"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_splr"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_flap"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_flap2"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_slat"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_sbrk"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_drud"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_elev"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_rudd"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_rudd2"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_body_r"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_gear_type"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_gear_latE"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_gear_lonE"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_gear_axiE"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_gear_latR"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_gear_lonR"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_gear_axiR"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_gear_latN"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_gear_lonN"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_gear_axiN"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_gear_leglen"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_gear_tirrad"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_gearcon"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_geardmp"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_gearstatdef"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_gear_deploy"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_gear_xnodef"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_gear_ynodef"));
dpMeasured.push_back(DataPoint("sim/aircraft/parts/acf_gear_znodef"));
dpMeasured.push_back(DataPoint("sim/aircraft/bodies/acf_fuse_cd"));
dpMeasured.push_back(DataPoint("sim/aircraft/bodies/acf_fuse_cd_array"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_ail1_crat"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_ail1_up"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_ail1_dn"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_RSC_mingov_prp"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_RSC_idlespeed_prp"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_RSC_redline_prp"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_ail2_crat"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_ail2_up"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_ail2_dn"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_RSC_mingreen_prp"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_RSC_maxgreen_prp"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_elev_crat"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_elev_up"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_elev_dn"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_trq_max_eng"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_trq_max_prp"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_rudd_crat"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_rudd_lr"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_rudd_rr"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_rud2_crat"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_rud2_lr"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_rud2_rr"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_splr_crat"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_splr_up"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_sbrk_crat"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_sbrk2_crat"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_sbrk_up"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_sbrk2_up"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_flap_crat"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_flap2_crat"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_flap_dn"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_flap2_dn"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_hstb_trim_up"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_hstb_trim_dn"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_flap_type"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_flap2_type"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_con_smooth"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_flap_cl"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_flap_cd"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_flap_cm"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_flap2_cl"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_flap2_cd"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_flap2_cm"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_flap_detents"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_flap_deftime"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_slat_inc"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_blown_flap_throt_red"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_blown_flap_min_engag"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_takeoff_trim"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_min_trim_elev"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_max_trim_elev"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_elev_trim_speedrat"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_elev_tab"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_min_trim_ailn"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_max_trim_ailn"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_ailn_trim_speedrat"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_ailn_tab"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_min_trim_rudd"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_max_trim_rudd"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_rudd_trim_speedrat"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_rudd_tab"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_elev_def_time"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_ailn_def_time"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_rudd_def_time"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_elev_trim_time"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_ailn_trim_time"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_rudd_trim_time"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_speedbrake_ext_time"));
dpMeasured.push_back(DataPoint("sim/aircraft/controls/acf_speedbrake_ret_time"));
dpMeasured.push_back(DataPoint("sim/aircraft/gear/acf_gear_retract"));
dpMeasured.push_back(DataPoint("sim/aircraft/gear/acf_gear_is_skid"));
dpMeasured.push_back(DataPoint("sim/aircraft/gear/acf_nw_steerdeg1"));
dpMeasured.push_back(DataPoint("sim/aircraft/gear/acf_nw_steerdeg2"));
dpMeasured.push_back(DataPoint("sim/aircraft/gear/acf_nw_cutoff_speed"));
dpMeasured.push_back(DataPoint("sim/aircraft/gear/acf_water_rud_longarm"));
dpMeasured.push_back(DataPoint("sim/aircraft/gear/acf_water_rud_area"));
dpMeasured.push_back(DataPoint("sim/aircraft/gear/acf_water_rud_maxdef"));
dpMeasured.push_back(DataPoint("sim/aircraft/gear/acf_h_eqlbm"));
dpMeasured.push_back(DataPoint("sim/aircraft/gear/acf_the_eqlbm"));
dpMeasured.push_back(DataPoint("sim/aircraft/gear/acf_gear_door_typ"));
dpMeasured.push_back(DataPoint("sim/aircraft/gear/acf_gear_door_area"));
dpMeasured.push_back(DataPoint("sim/aircraft/gear/acf_gear_door_loc"));
dpMeasured.push_back(DataPoint("sim/aircraft/gear/acf_gear_door_geo"));
dpMeasured.push_back(DataPoint("sim/aircraft/gear/acf_gear_door_nrm"));
dpMeasured.push_back(DataPoint("sim/aircraft/gear/acf_gear_door_axi_rot"));
dpMeasured.push_back(DataPoint("sim/aircraft/gear/acf_gear_door_ext_ang"));
dpMeasured.push_back(DataPoint("sim/aircraft/gear/acf_gear_door_ret_ang"));
dpMeasured.push_back(DataPoint("sim/aircraft/gear/acf_gear_door_ang_now"));
dpMeasured.push_back(DataPoint("sim/aircraft/gear/acf_gear_door_inn_s1"));
dpMeasured.push_back(DataPoint("sim/aircraft/gear/acf_gear_door_out_s1"));
dpMeasured.push_back(DataPoint("sim/aircraft/gear/acf_gear_door_inn_t1"));
dpMeasured.push_back(DataPoint("sim/aircraft/gear/acf_gear_door_out_t1"));
dpMeasured.push_back(DataPoint("sim/aircraft/gear/acf_gear_door_inn_s2"));
dpMeasured.push_back(DataPoint("sim/aircraft/gear/acf_gear_door_out_s2"));
dpMeasured.push_back(DataPoint("sim/aircraft/gear/acf_gear_door_inn_t2"));
dpMeasured.push_back(DataPoint("sim/aircraft/gear/acf_gear_door_out_t2"));
dpMeasured.push_back(DataPoint("sim/aircraft/weight/acf_cgY"));
dpMeasured.push_back(DataPoint("sim/aircraft/weight/acf_cgZ"));
dpMeasured.push_back(DataPoint("sim/aircraft/weight/acf_cgY_original"));
dpMeasured.push_back(DataPoint("sim/aircraft/weight/acf_cgZ_original"));
dpMeasured.push_back(DataPoint("sim/aircraft/weight/acf_Jxx_unitmass"));
dpMeasured.push_back(DataPoint("sim/aircraft/weight/acf_Jyy_unitmass"));
dpMeasured.push_back(DataPoint("sim/aircraft/weight/acf_Jzz_unitmass"));
dpMeasured.push_back(DataPoint("sim/aircraft/weight/acf_m_empty"));
dpMeasured.push_back(DataPoint("sim/aircraft/weight/acf_m_displaced"));
dpMeasured.push_back(DataPoint("sim/aircraft/weight/acf_m_max"));
dpMeasured.push_back(DataPoint("sim/aircraft/weight/acf_m_fuel_tot"));
dpMeasured.push_back(DataPoint("sim/aircraft/weight/acf_m_jettison"));
dpMeasured.push_back(DataPoint("sim/aircraft/weight/acf_m_displaced_y"));
dpMeasured.push_back(DataPoint("sim/aircraft/specialcontrols/acf_jato_theta"));
dpMeasured.push_back(DataPoint("sim/aircraft/specialcontrols/acf_jato_thrust"));
dpMeasured.push_back(DataPoint("sim/aircraft/specialcontrols/acf_jato_dur"));
dpMeasured.push_back(DataPoint("sim/aircraft/specialcontrols/acf_jato_sfc"));
dpMeasured.push_back(DataPoint("sim/aircraft/specialcontrols/acf_jato_Y"));
dpMeasured.push_back(DataPoint("sim/aircraft/specialcontrols/acf_jato_Z"));
dpMeasured.push_back(DataPoint("sim/aircraft/specialcontrols/acf_chute_area"));
dpMeasured.push_back(DataPoint("sim/aircraft/specialcontrols/acf_chute_Y"));
dpMeasured.push_back(DataPoint("sim/aircraft/specialcontrols/acf_chute_Z"));
dpMeasured.push_back(DataPoint("sim/aircraft/specialcontrols/acf_ail1pitch"));
dpMeasured.push_back(DataPoint("sim/aircraft/specialcontrols/acf_ail1flaps"));
dpMeasured.push_back(DataPoint("sim/aircraft/specialcontrols/acf_ail2pitch"));
dpMeasured.push_back(DataPoint("sim/aircraft/specialcontrols/acf_ail2flaps"));
dpMeasured.push_back(DataPoint("sim/aircraft/specialcontrols/acf_stabroll"));
dpMeasured.push_back(DataPoint("sim/aircraft/specialcontrols/acf_stabhdng"));
dpMeasured.push_back(DataPoint("sim/aircraft/specialcontrols/acf_tvec_ptch"));
dpMeasured.push_back(DataPoint("sim/aircraft/specialcontrols/acf_tvec_roll"));
dpMeasured.push_back(DataPoint("sim/aircraft/specialcontrols/acf_tvec_hdng"));
dpMeasured.push_back(DataPoint("sim/aircraft/specialcontrols/acf_diff_thro_with_hdng"));
dpMeasured.push_back(DataPoint("sim/aircraft/specialcontrols/acf_arrestingEQ"));
dpMeasured.push_back(DataPoint("sim/aircraft/specialcontrols/acf_antiiceEQ"));
dpMeasured.push_back(DataPoint("sim/aircraft/specialcontrols/acf_warn1EQ"));
dpMeasured.push_back(DataPoint("sim/aircraft/specialcontrols/acf_gearhornEQ"));
dpMeasured.push_back(DataPoint("sim/aircraft/specialcontrols/acf_autosbrkEQ"));
dpMeasured.push_back(DataPoint("sim/aircraft/specialcontrols/acf_autofbrkEQ"));
dpMeasured.push_back(DataPoint("sim/aircraft/specialcontrols/acf_autosweepEQ"));
dpMeasured.push_back(DataPoint("sim/aircraft/specialcontrols/acf_autoslatEQ"));
dpMeasured.push_back(DataPoint("sim/aircraft/vtolcontrols/acf_vectEQ"));
dpMeasured.push_back(DataPoint("sim/aircraft/vtolcontrols/acf_vectarmZ"));
dpMeasured.push_back(DataPoint("sim/aircraft/vtolcontrols/acf_cyclic_elev"));
dpMeasured.push_back(DataPoint("sim/aircraft/vtolcontrols/acf_cyclic_ailn"));
dpMeasured.push_back(DataPoint("sim/aircraft/vtolcontrols/acf_delta3"));
dpMeasured.push_back(DataPoint("sim/aircraft/vtolcontrols/acf_puffL"));
dpMeasured.push_back(DataPoint("sim/aircraft/vtolcontrols/acf_puffM"));
dpMeasured.push_back(DataPoint("sim/aircraft/vtolcontrols/acf_puffN"));
dpMeasured.push_back(DataPoint("sim/aircraft/vtolcontrols/acf_tail_with_coll"));
dpMeasured.push_back(DataPoint("sim/aircraft/vtolcontrols/acf_diff_coll_with_roll"));
dpMeasured.push_back(DataPoint("sim/aircraft/vtolcontrols/acf_diff_coll_with_hdng"));
dpMeasured.push_back(DataPoint("sim/aircraft/vtolcontrols/acf_diff_cycl_with_hdng_lon"));
dpMeasured.push_back(DataPoint("sim/aircraft/vtolcontrols/acf_auto_rpm_with_tvec"));
dpMeasured.push_back(DataPoint("sim/aircraft/vtolcontrols/acf_rotor_trim_max_fwd"));
dpMeasured.push_back(DataPoint("sim/aircraft/vtolcontrols/acf_rotor_trim_max_aft"));
dpMeasured.push_back(DataPoint("sim/aircraft/artstability/acf_AShiV"));
dpMeasured.push_back(DataPoint("sim/aircraft/artstability/acf_ASloV"));
dpMeasured.push_back(DataPoint("sim/aircraft/artstability/acf_ASmaxp_lo"));
dpMeasured.push_back(DataPoint("sim/aircraft/artstability/acf_ASp_lo_rate"));
dpMeasured.push_back(DataPoint("sim/aircraft/artstability/acf_ASmaxp_hi"));
dpMeasured.push_back(DataPoint("sim/aircraft/artstability/acf_ASp_hi_pos"));
dpMeasured.push_back(DataPoint("sim/aircraft/artstability/acf_ASmaxh_lo"));
dpMeasured.push_back(DataPoint("sim/aircraft/artstability/acf_ASh_lo_rate"));
dpMeasured.push_back(DataPoint("sim/aircraft/artstability/acf_ASmaxh_hi"));
dpMeasured.push_back(DataPoint("sim/aircraft/artstability/acf_ASh_hi_pos"));
dpMeasured.push_back(DataPoint("sim/aircraft/artstability/acf_ASmaxr_lo"));
dpMeasured.push_back(DataPoint("sim/aircraft/artstability/acf_ASr_lo_rate"));
dpMeasured.push_back(DataPoint("sim/aircraft/artstability/acf_ASmaxr_hi"));
dpMeasured.push_back(DataPoint("sim/aircraft/artstability/acf_ASr_hi_rate"));
dpMeasured.push_back(DataPoint("sim/aircraft/artstability/acf_has_clutch"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_stab_delinc_to_Vne"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_Vmca"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_Vyse"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_flap_arm"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_cgZ_fwd"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_cgZ_aft"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_gear_cyc_time"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_refuel_X"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_refuel_Y"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_refuel_Z"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_gear_steers"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_dihed2"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/jett_X"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/jett_Y"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/jett_Z"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_puffX"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_puffY"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_puffZ"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_Vle"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_ASp_hi_rate"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_ASh_hi_rate"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_elevflaps"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_tank_X"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_tank_Y"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_tank_Z"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_tank_rat"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_stall_warn_alpha"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_mass_shift"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_mass_shift_dx"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_mass_shift_dz"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_feathered_pitch"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_ASmaxg_hi"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_ASg_hi_pos"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_ASg_hi_rate"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_wing_tilt_ptch"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_wing_tilt_roll"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_max_press_diff"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_diff_coll_with_ptch"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_flap_roll"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_flap_ptch"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_diff_cycl_with_hdng_lat"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_phase_tvect_out_at_90"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_roll_co"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_brake_co"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_drive_by_wire"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_is_glossy"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_num_tanks"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_has_refuel"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_jett_is_slung"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_eng_mass"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_phase_tvect_out_at_00"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_auto_trimEQ"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_has_DC_fd"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_flaps_with_gearEQ"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_rev_on_touchdown"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_flaps_with_vecEQ"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_warn2EQ"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_num_thrustpoints"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_Xwpn_att"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_Ywpn_att"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_Zwpn_att"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_cus_rnd_use"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_cus_rnd_lo_val"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_cus_rnd_hi_val"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_cus_rnd_lo_ang"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_cus_rnd_hi_ang"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_has_beta"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_cus_rnd_mirror"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_cus_rnd_label"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_cus_dig_use"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_cus_dig_offset"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_cus_dig_scale"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_cus_dig_dig"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_cus_dig_dec"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_inc_ail"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_inc_ail2"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_inc_vec"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_tow_hook_Y"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_tow_hook_Z"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_win_hook_Y"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_win_hook_Z"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_nosewheel_k"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_vectarmY"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_hide_prop_at_90_vect"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_has_APU_switch"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_has_full_bleed_air"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_has_fuel_all"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/acf_has_fuel_any"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/has_hsi"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/has_yawdamp_but"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/has_litemap_tex_2"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/has_transonic_audio"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/has_pre_rotate"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/SFC_alt_lo_PRP"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/SFC_half_lo_PRP"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/SFC_full_lo_PRP"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/SFC_alt_hi_PRP"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/SFC_half_hi_PRP"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/SFC_full_hi_PRP"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/ff_rat_idle_PRP"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/SFC_alt_lo_JET"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/SFC_half_lo_JET"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/SFC_full_lo_JET"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/SFC_alt_hi_JET"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/SFC_half_hi_JET"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/SFC_full_hi_JET"));
dpMeasured.push_back(DataPoint("sim/aircraft/overflow/ff_rat_idle_JET"));
dpMeasured.push_back(DataPoint("sim/aircraft/systems/fdir_needed_to_engage_servos"));
dpMeasured.push_back(DataPoint("sim/airfoils/afl_clB"));
dpMeasured.push_back(DataPoint("sim/airfoils/afl_almin_array"));
dpMeasured.push_back(DataPoint("sim/airfoils/afl_almax_array"));
dpMeasured.push_back(DataPoint("sim/airfoils/afl_re_num"));
dpMeasured.push_back(DataPoint("sim/airfoils/afl_t_rat"));
dpMeasured.push_back(DataPoint("sim/airfoils/afl_mach_div"));
dpMeasured.push_back(DataPoint("sim/airfoils/afl_clM"));
dpMeasured.push_back(DataPoint("sim/airfoils/afl_cl"));
dpMeasured.push_back(DataPoint("sim/airfoils/afl_cd"));
dpMeasured.push_back(DataPoint("sim/airfoils/afl_cm"));
dpMeasured.push_back(DataPoint("sim/cockpit/autopilot/autopilot_mode"));
dpMeasured.push_back(DataPoint("sim/cockpit/autopilot/airspeed_mode"));
dpMeasured.push_back(DataPoint("sim/cockpit/autopilot/heading_mode"));
dpMeasured.push_back(DataPoint("sim/cockpit/autopilot/altitude_mode"));
dpMeasured.push_back(DataPoint("sim/cockpit/autopilot/backcourse_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/autopilot/altitude"));
dpMeasured.push_back(DataPoint("sim/cockpit/autopilot/current_altitude"));
dpMeasured.push_back(DataPoint("sim/cockpit/autopilot/vertical_velocity"));
dpMeasured.push_back(DataPoint("sim/cockpit/autopilot/airspeed"));
dpMeasured.push_back(DataPoint("sim/cockpit/autopilot/heading"));
dpMeasured.push_back(DataPoint("sim/cockpit/autopilot/heading_mag"));
dpMeasured.push_back(DataPoint("sim/cockpit/autopilot/heading_mag2"));
dpMeasured.push_back(DataPoint("sim/cockpit/autopilot/airspeed_is_mach"));
dpMeasured.push_back(DataPoint("sim/cockpit/autopilot/flight_director_pitch"));
dpMeasured.push_back(DataPoint("sim/cockpit/autopilot/flight_director_roll"));
dpMeasured.push_back(DataPoint("sim/cockpit/autopilot/autopilot_state"));
dpMeasured.push_back(DataPoint("sim/cockpit/autopilot/heading_roll_mode"));
dpMeasured.push_back(DataPoint("sim/cockpit/autopilot/mode_hnav"));
dpMeasured.push_back(DataPoint("sim/cockpit/autopilot/mode_gls"));
dpMeasured.push_back(DataPoint("sim/cockpit/autopilot/syn_hold_deg"));
dpMeasured.push_back(DataPoint("sim/cockpit/autopilot/nav_steer_deg_mag"));
dpMeasured.push_back(DataPoint("sim/cockpit/avidyne/lft_hil"));
dpMeasured.push_back(DataPoint("sim/cockpit/avidyne/rgt_hil"));
dpMeasured.push_back(DataPoint("sim/cockpit/avidyne/alt_hil"));
dpMeasured.push_back(DataPoint("sim/cockpit/avidyne/src"));
dpMeasured.push_back(DataPoint("sim/cockpit/avidyne/hsi_mode"));
dpMeasured.push_back(DataPoint("sim/cockpit/avidyne/map_range_sel"));
dpMeasured.push_back(DataPoint("sim/cockpit/electrical/battery_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/electrical/battery_array_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/electrical/battery_EQ"));
dpMeasured.push_back(DataPoint("sim/cockpit/electrical/avionics_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/electrical/avionics_EQ"));
dpMeasured.push_back(DataPoint("sim/cockpit/electrical/generator_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/electrical/generator_EQ"));
dpMeasured.push_back(DataPoint("sim/cockpit/electrical/generator_apu_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/electrical/gpu_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/electrical/generator_apu_amps"));
dpMeasured.push_back(DataPoint("sim/cockpit/electrical/gpu_amps"));
dpMeasured.push_back(DataPoint("sim/cockpit/electrical/HUD_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/electrical/HUD_brightness"));
dpMeasured.push_back(DataPoint("sim/cockpit/electrical/beacon_lights_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/electrical/landing_lights_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/electrical/nav_lights_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/electrical/strobe_lights_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/electrical/taxi_light_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/electrical/cockpit_lights_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/electrical/cockpit_lights"));
dpMeasured.push_back(DataPoint("sim/cockpit/electrical/instrument_brightness"));
dpMeasured.push_back(DataPoint("sim/cockpit/electrical/sunglasses_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/electrical/night_vision_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/electrical/ah_bar"));
dpMeasured.push_back(DataPoint("sim/cockpit/engine/inverter_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/engine/inverter_eq"));
dpMeasured.push_back(DataPoint("sim/cockpit/engine/fuel_pump_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/engine/fadec_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/engine/idle_speed"));
dpMeasured.push_back(DataPoint("sim/cockpit/engine/fuel_tank_selector"));
dpMeasured.push_back(DataPoint("sim/cockpit/engine/fuel_tank_transfer"));
dpMeasured.push_back(DataPoint("sim/cockpit/engine/fuel_tank_transfer_from"));
dpMeasured.push_back(DataPoint("sim/cockpit/engine/ignition_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/engine/igniters_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/engine/starter_duration"));
dpMeasured.push_back(DataPoint("sim/cockpit/engine/clutch_engage"));
dpMeasured.push_back(DataPoint("sim/cockpit/engine/APU_switch"));
dpMeasured.push_back(DataPoint("sim/cockpit/engine/APU_running"));
dpMeasured.push_back(DataPoint("sim/cockpit/engine/APU_N1"));
dpMeasured.push_back(DataPoint("sim/cockpit/g430/g430_nav_com_sel"));
dpMeasured.push_back(DataPoint("sim/cockpit/gps/course"));
dpMeasured.push_back(DataPoint("sim/cockpit/gps/destination_type"));
dpMeasured.push_back(DataPoint("sim/cockpit/gps/destination_index"));
dpMeasured.push_back(DataPoint("sim/cockpit/gyros/the_vac_ind_deg"));
dpMeasured.push_back(DataPoint("sim/cockpit/gyros/psi_vac_ind_degm"));
dpMeasured.push_back(DataPoint("sim/cockpit/gyros/phi_vac_ind_deg"));
dpMeasured.push_back(DataPoint("sim/cockpit/gyros/the_ele_ind_deg"));
dpMeasured.push_back(DataPoint("sim/cockpit/gyros/psi_ele_ind_degm"));
dpMeasured.push_back(DataPoint("sim/cockpit/gyros/phi_ele_ind_deg"));
dpMeasured.push_back(DataPoint("sim/cockpit/gyros/the_ind_deg3"));
dpMeasured.push_back(DataPoint("sim/cockpit/gyros/psi_ind_degm3"));
dpMeasured.push_back(DataPoint("sim/cockpit/gyros/phi_ind_deg3"));
dpMeasured.push_back(DataPoint("sim/cockpit/gyros/the_ind_deg4"));
dpMeasured.push_back(DataPoint("sim/cockpit/gyros/psi_ind_degm4"));
dpMeasured.push_back(DataPoint("sim/cockpit/gyros/phi_ind_deg4"));
dpMeasured.push_back(DataPoint("sim/cockpit/gyros/dg_drift_vac_deg"));
dpMeasured.push_back(DataPoint("sim/cockpit/gyros/dg_drift_ele_deg"));
dpMeasured.push_back(DataPoint("sim/cockpit/gyros/dg_drift_vac2_deg"));
dpMeasured.push_back(DataPoint("sim/cockpit/gyros/dg_drift_ele2_deg"));
dpMeasured.push_back(DataPoint("sim/cockpit/gyros/gyr_force"));
dpMeasured.push_back(DataPoint("sim/cockpit/gyros/gyr_spin"));
dpMeasured.push_back(DataPoint("sim/cockpit/misc/outer_marker_lit"));
dpMeasured.push_back(DataPoint("sim/cockpit/misc/middle_marker_lit"));
dpMeasured.push_back(DataPoint("sim/cockpit/misc/inner_marker_lit"));
dpMeasured.push_back(DataPoint("sim/cockpit/misc/over_outer_marker"));
dpMeasured.push_back(DataPoint("sim/cockpit/misc/over_middle_marker"));
dpMeasured.push_back(DataPoint("sim/cockpit/misc/over_inner_marker"));
dpMeasured.push_back(DataPoint("sim/cockpit/misc/barometer_setting"));
dpMeasured.push_back(DataPoint("sim/cockpit/misc/barometer_setting2"));
dpMeasured.push_back(DataPoint("sim/cockpit/misc/radio_altimeter_minimum"));
dpMeasured.push_back(DataPoint("sim/cockpit/misc/show_path"));
dpMeasured.push_back(DataPoint("sim/cockpit/misc/vacuum"));
dpMeasured.push_back(DataPoint("sim/cockpit/misc/vacuum2"));
dpMeasured.push_back(DataPoint("sim/cockpit/misc/ah_adjust"));
dpMeasured.push_back(DataPoint("sim/cockpit/misc/ah_adjust2"));
dpMeasured.push_back(DataPoint("sim/cockpit/misc/compass_indicated"));
dpMeasured.push_back(DataPoint("sim/cockpit/misc/hydraulic_quantity"));
dpMeasured.push_back(DataPoint("sim/cockpit/misc/hydraulic_quantity2"));
dpMeasured.push_back(DataPoint("sim/cockpit/misc/fan_fore"));
dpMeasured.push_back(DataPoint("sim/cockpit/misc/fan_aft"));
dpMeasured.push_back(DataPoint("sim/cockpit/pressure/bleed_air_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/pressure/bleed_air_mode"));
dpMeasured.push_back(DataPoint("sim/cockpit/pressure/cabin_altitude_set_m_msl"));
dpMeasured.push_back(DataPoint("sim/cockpit/pressure/cabin_vvi_set_m_msec"));
dpMeasured.push_back(DataPoint("sim/cockpit/pressure/cabin_pressure_differential_psi"));
dpMeasured.push_back(DataPoint("sim/cockpit/pressure/cabin_altitude_actual_m_msl"));
dpMeasured.push_back(DataPoint("sim/cockpit/pressure/cabin_vvi_actual_m_msec"));
dpMeasured.push_back(DataPoint("sim/cockpit/pressure/pressure_test_timeout"));
dpMeasured.push_back(DataPoint("sim/cockpit/pressure/max_allowable_altitude"));
dpMeasured.push_back(DataPoint("sim/cockpit/pressure/dump_all"));
dpMeasured.push_back(DataPoint("sim/cockpit/pressure/dump_to_alt"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav1_freq_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav2_freq_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/com1_freq_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/com2_freq_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/adf1_freq_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/adf2_freq_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/dme_freq_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav1_stdby_freq_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav2_stdby_freq_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/com1_stdby_freq_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/com2_stdby_freq_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/adf1_stdby_freq_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/adf2_stdby_freq_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/dme_stdby_freq_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav1_obs_degt"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav2_obs_degt"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav1_obs_degm"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav1_obs_degm2"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav2_obs_degm"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav2_obs_degm2"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav1_dir_degt"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav2_dir_degt"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/adf1_dir_degt"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/adf2_dir_degt"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/gps_dir_degt"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/dme_dir_degt"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav1_hdef_dot"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav1_hdef_dot2"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav2_hdef_dot"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav2_hdef_dot2"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/gps_hdef_dot"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/gps_hdef_dot2"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav1_vdef_dot"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav1_vdef_dot2"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav2_vdef_dot"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav2_vdef_dot2"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/gps_vdef_dot"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/gps_vdef_dot2"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav1_fromto"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav1_fromto2"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav2_fromto"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav2_fromto2"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/gps_fromto"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/gps_fromto2"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav1_CDI"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav2_CDI"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav1_dme_dist_m"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav2_dme_dist_m"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/adf1_dme_dist_m"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/adf2_dme_dist_m"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/gps_dme_dist_m"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/standalone_dme_dist_m"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav1_dme_speed_kts"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav2_dme_speed_kts"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/adf1_dme_speed_kts"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/adf2_dme_speed_kts"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/gps_dme_speed_kts"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/standalone_dme_speed_kts"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav1_dme_time_secs"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav2_dme_time_secs"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/adf1_dme_time_secs"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/adf2_dme_time_secs"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/gps_dme_time_secs"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/standalone_dme_time_secs"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav1_course_degm"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav1_course_degm2"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav2_course_degm"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav2_course_degm2"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/gps_course_degtm"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/gps_course_degtm2"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav1_slope_degt"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav2_slope_degt"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/gps_slope_degt"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/transponder_code"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/transponder_id"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/transponder_light"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/transponder_brightness"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/transponder_mode"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav1_cardinal_dir"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav1_cardinal_dir2"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav2_cardinal_dir"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav2_cardinal_dir2"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/adf1_cardinal_dir"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/adf1_cardinal_dir2"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/adf2_cardinal_dir"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/adf2_cardinal_dir2"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav1_has_dme"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav2_has_dme"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/adf1_has_dme"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/adf2_has_dme"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/dme5_has_dme"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/obs_mag"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/gear_audio_working"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/marker_audio_working"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav_type"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/ap_src"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/nav_com_adf_mode"));
dpMeasured.push_back(DataPoint("sim/cockpit/radios/gps_has_glideslope"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/DME_radio_selector"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/DME_distance_or_time"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/HSI_selector"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/HSI_selector2"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/RMI_selector"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/RMI_selector2"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/RMI_l_vor_adf_selector"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/RMI_l_vor_adf_selector2"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/RMI_r_vor_adf_selector"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/RMI_r_vor_adf_selector2"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/EFIS_dme_1_selector"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/EFIS_dme_2_selector"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/marker_panel_out"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/audio_panel_out"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/anti_ice_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/anti_ice_inlet_heat"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/anti_ice_prop_heat"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/anti_ice_window_heat"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/pitot_heat_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/pitot_heat_on2"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/anti_ice_AOA_heat"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/anti_ice_surf_heat"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/anti_ice_surf_heat_left"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/anti_ice_surf_heat_right"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/anti_ice_surf_boot"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/anti_ice_engine_air"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/anti_ice_auto_ignite"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/ice_detect"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/auto_brake_settings"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/auto_feather_mode"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/yaw_damper_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/art_stab_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/pre_rotate_level"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/parachute_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/jato_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/prop_sync_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/puffers_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/water_scoop"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/arresting_gear"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/canopy_req"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/dumping_fuel"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/tot_ener_audio"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/EFIS_map_mode"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/EFIS_map_submode"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/EFIS_map_range_selector"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/ECAM_mode"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/gear_handle_status"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/EFIFS_shows_weather"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/EFIS_weather_alpha"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/EFIS_shows_tcas"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/EFIS_shows_airports"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/EFIS_shows_waypoints"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/EFIS_shows_VORs"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/EFIS_shows_NDBs"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/argus_mode"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/no_smoking"));
dpMeasured.push_back(DataPoint("sim/cockpit/switches/fasten_seat_belts"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/master_caution_timeout"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/master_caution_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/master_warning_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/master_accept_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciator_test_timeout"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciator_test_pressed"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/autopilot_test_beeping"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/autopilot_test_modes_lit"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/autopilot_test_trim_lit"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/autopilot_test_ap_lit"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/master_caution"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/master_warning"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/master_accept"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/autopilot_disconnect"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/low_vacuum"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/low_voltage"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/fuel_quantity"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/hydraulic_pressure"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/speedbrake"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/GPWS"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/ice"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/lo_rotor"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/hi_rotor"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/pitot_heat_off"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/transonic"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/slats"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/flight_director"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/autopilot"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/yaw_damper"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/fuel_pressure_low"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/oil_pressure_low"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/oil_temperature_high"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/generator_off"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/chip_detected"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/engine_fires"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/igniter_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/reverser_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/burner_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/inverter_off"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/N1_low"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/N1_high"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/reverser_not_ready"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/ice_vane_extend"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/ice_vane_fail"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/bleed_air_off"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/bleed_air_fail"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/auto_feather_arm"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/fuel_transfer"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/hvac"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/battery_charge_hi"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/cabin_altitude_12500"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/autopilot_trim_fail"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/electric_trim_off"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/crossfeed_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/landing_taxi_lite"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/cabin_door_open"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/external_power_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/passenger_oxy_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/gear_unsafe"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/autopilot_trim_down"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/autopilot_trim_up"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/autopilot_bank_limit"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/autopilot_soft_ride"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/no_inverters"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/fuel_pressure"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/oil_pressure"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/oil_temperature"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/generator"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/chip_detect"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/engine_fire"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/auto_ignition"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/reverse"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/afterburners_on"));
dpMeasured.push_back(DataPoint("sim/cockpit/warnings/annunciators/inverter"));
dpMeasured.push_back(DataPoint("sim/cockpit/weapons/guns_armed"));
dpMeasured.push_back(DataPoint("sim/cockpit/weapons/rockets_armed"));
dpMeasured.push_back(DataPoint("sim/cockpit/weapons/missiles_armed"));
dpMeasured.push_back(DataPoint("sim/cockpit/weapons/bombs_armed"));
dpMeasured.push_back(DataPoint("sim/cockpit/weapons/firing_mode"));
dpMeasured.push_back(DataPoint("sim/cockpit/weapons/firing_rate"));
dpMeasured.push_back(DataPoint("sim/cockpit/weapons/plane_target_index"));
dpMeasured.push_back(DataPoint("sim/cockpit/weapons/chaff_time_left"));
dpMeasured.push_back(DataPoint("sim/cockpit/weapons/chaff_now"));
dpMeasured.push_back(DataPoint("sim/cockpit/weapons/chaff_max"));
dpMeasured.push_back(DataPoint("sim/cockpit/weapons/flare_time_left"));
dpMeasured.push_back(DataPoint("sim/cockpit/weapons/flare_now"));
dpMeasured.push_back(DataPoint("sim/cockpit/weapons/flare_max"));
dpMeasured.push_back(DataPoint("sim/cockpit/weapons/wpn_sel_console"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/sbrkrat"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/flaprqst"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/tail_lock_rat"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/ail_trim"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/dist"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/elv_trim"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/flaprat"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/flap2rat"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/l_brake_add"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/r_brake_add"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/lail1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/lail2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/rail1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/rail2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/ldruddef"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/rdruddef"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/lsplrdef"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/rsplrdef"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/ail1_def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/ail2_def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/splr_def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/splr2_def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/yawb_def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/rudd_def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/rudd2_def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/elv1_def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/elv2_def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/fla1_def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/fla2_def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/sbrkrqst"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/vectrqst"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/swdi"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/swdirqst"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/slatrat"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/parkbrake"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/rot_trim"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/rud_trim"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/incid_rqst"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/dihed_rqst"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/vect_rat"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/incid_rat"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/dihed_rat"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/tailhook_ratio"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/canopy_ratio"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing1l_ail1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing1l_ail2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing1r_ail1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing1r_ail2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing2l_ail1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing2l_ail2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing2r_ail1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing2r_ail2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing3l_ail1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing3l_ail2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing3r_ail1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing3r_ail2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing4l_ail1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing4l_ail2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing4r_ail1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing4r_ail2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing1l_spo1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing1l_spo2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing1r_spo1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing1r_spo2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing2l_spo1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing2l_spo2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing2r_spo1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing2r_spo2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing3l_spo1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing3l_spo2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing3r_spo1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing3r_spo2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing4l_spo1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing4l_spo2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing4r_spo1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing4r_spo2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing1l_fla1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing1l_fla2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing1r_fla1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing1r_fla2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing2l_fla1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing2l_fla2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing2r_fla1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing2r_fla2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing3l_fla1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing3l_fla2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing3r_fla1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing3r_fla2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing4l_fla1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing4l_fla2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing4r_fla1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing4r_fla2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing1l_yawbdef"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing1r_yawbdef"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing2l_yawbdef"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing2r_yawbdef"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing3l_yawbdef"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing3r_yawbdef"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing4l_yawbdef"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing4r_yawbdef"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/hstab1_elv1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/hstab1_elv2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/hstab2_elv1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/hstab2_elv2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/vstab1_rud1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/vstab1_rud2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/vstab2_rud1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/vstab2_rud2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing01_ail1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing01_ail2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing01_spo1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing01_spo2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing01_fla1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing01_fla2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing01_yawbdef"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing01_elv1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing01_elv2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing01_rud1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing01_rud2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing02_ail1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing02_ail2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing02_spo1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing02_spo2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing02_fla1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing02_fla2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing02_yawbdef"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing02_elv1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing02_elv2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing02_rud1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing02_rud2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing03_ail1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing03_ail2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing03_spo1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing03_spo2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing03_fla1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing03_fla2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing03_yawbdef"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing03_elv1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing03_elv2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing03_rud1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing03_rud2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing04_ail1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing04_ail2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing04_spo1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing04_spo2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing04_fla1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing04_fla2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing04_yawbdef"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing04_elv1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing04_elv2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing04_rud1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing04_rud2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing05_ail1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing05_ail2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing05_spo1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing05_spo2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing05_fla1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing05_fla2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing05_yawbdef"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing05_elv1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing05_elv2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing05_rud1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing05_rud2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing06_ail1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing06_ail2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing06_spo1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing06_spo2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing06_fla1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing06_fla2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing06_yawbdef"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing06_elv1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing06_elv2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing06_rud1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing06_rud2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing07_ail1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing07_ail2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing07_spo1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing07_spo2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing07_fla1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing07_fla2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing07_yawbdef"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing07_elv1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing07_elv2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing07_rud1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing07_rud2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing08_ail1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing08_ail2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing08_spo1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing08_spo2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing08_fla1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing08_fla2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing08_yawbdef"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing08_elv1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing08_elv2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing08_rud1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing08_rud2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing09_ail1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing09_ail2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing09_spo1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing09_spo2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing09_fla1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing09_fla2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing09_yawbdef"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing09_elv1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing09_elv2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing09_rud1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing09_rud2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing10_ail1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing10_ail2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing10_spo1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing10_spo2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing10_fla1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing10_fla2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing10_yawbdef"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing10_elv1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing10_elv2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing10_rud1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing10_rud2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing11_ail1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing11_ail2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing11_spo1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing11_spo2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing11_fla1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing11_fla2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing11_yawbdef"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing11_elv1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing11_elv2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing11_rud1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing11_rud2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing12_ail1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing12_ail2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing12_spo1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing12_spo2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing12_fla1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing12_fla2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing12_yawbdef"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing12_elv1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing12_elv2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing12_rud1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing12_rud2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing13_ail1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing13_ail2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing13_spo1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing13_spo2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing13_fla1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing13_fla2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing13_yawbdef"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing13_elv1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing13_elv2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing13_rud1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing13_rud2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing14_ail1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing14_ail2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing14_spo1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing14_spo2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing14_fla1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing14_fla2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing14_yawbdef"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing14_elv1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing14_elv2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing14_rud1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing14_rud2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing15_ail1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing15_ail2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing15_spo1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing15_spo2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing15_fla1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing15_fla2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing15_yawbdef"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing15_elv1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing15_elv2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing15_rud1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing15_rud2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing16_ail1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing16_ail2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing16_spo1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing16_spo2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing16_fla1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing16_fla2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing16_yawbdef"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing16_elv1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing16_elv2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing16_rud1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing16_rud2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing17_ail1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing17_ail2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing17_spo1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing17_spo2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing17_fla1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing17_fla2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing17_yawbdef"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing17_elv1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing17_elv2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing17_rud1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing17_rud2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing18_ail1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing18_ail2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing18_spo1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing18_spo2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing18_fla1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing18_fla2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing18_yawbdef"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing18_elv1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing18_elv2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing18_rud1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing18_rud2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing19_ail1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing19_ail2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing19_spo1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing19_spo2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing19_fla1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing19_fla2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing19_yawbdef"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing19_elv1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing19_elv2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing19_rud1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing19_rud2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing20_ail1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing20_ail2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing20_spo1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing20_spo2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing20_fla1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing20_fla2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing20_yawbdef"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing20_elv1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing20_elv2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing20_rud1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing20_rud2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing1l_retract"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing1r_retract"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing2l_retract"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing2r_retract"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing3l_retract"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing3r_retract"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing4l_retract"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing4r_retract"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/hstab1_retract"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/hstab2_retract"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/vstab1_retract"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/vstab2_retract"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing01_retract"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing02_retract"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing03_retract"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing04_retract"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing05_retract"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing06_retract"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing07_retract"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing08_retract"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing09_retract"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing10_retract"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing11_retract"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing12_retract"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing13_retract"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing14_retract"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing15_retract"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing16_retract"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing17_retract"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing18_retract"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing19_retract"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing20_retract"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing1l_retract_now"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing1r_retract_now"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing2l_retract_now"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing2r_retract_now"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing3l_retract_now"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing3r_retract_now"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing4l_retract_now"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing4r_retract_now"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/hstab1_retract_now"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/hstab2_retract_now"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/vstab1_retract_now"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/vstab2_retract_now"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing01_retract_now"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing02_retract_now"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing03_retract_now"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing04_retract_now"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing05_retract_now"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing06_retract_now"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing07_retract_now"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing08_retract_now"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing09_retract_now"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing10_retract_now"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing11_retract_now"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing12_retract_now"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing13_retract_now"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing14_retract_now"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing15_retract_now"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing16_retract_now"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing17_retract_now"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing18_retract_now"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing19_retract_now"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing20_retract_now"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing1l_retract_max"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing1r_retract_max"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing2l_retract_max"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing2r_retract_max"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing3l_retract_max"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing3r_retract_max"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing4l_retract_max"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing4r_retract_max"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/hstab1_retract_max"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/hstab2_retract_max"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/vstab1_retract_max"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/vstab2_retract_max"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing01_retract_max"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing02_retract_max"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing03_retract_max"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing04_retract_max"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing05_retract_max"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing06_retract_max"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing07_retract_max"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing08_retract_max"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing09_retract_max"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing10_retract_max"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing11_retract_max"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing12_retract_max"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing13_retract_max"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing14_retract_max"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing15_retract_max"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing16_retract_max"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing17_retract_max"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing18_retract_max"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing19_retract_max"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/mwing20_retract_max"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing1l_elv1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing1l_elv2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing1r_elv1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing1r_elv2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing2l_elv1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing2l_elv2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing2r_elv1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing2r_elv2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing3l_elv1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing3l_elv2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing3r_elv1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing3r_elv2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing4l_elv1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing4l_elv2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing4r_elv1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/controls/wing4r_elv2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/cyclic/cyclic_ailn_blad_alph"));
dpMeasured.push_back(DataPoint("sim/flightmodel/cyclic/cyclic_ailn_disc_tilt"));
dpMeasured.push_back(DataPoint("sim/flightmodel/cyclic/cyclic_elev_blad_alph"));
dpMeasured.push_back(DataPoint("sim/flightmodel/cyclic/cyclic_elev_disc_tilt"));
dpMeasured.push_back(DataPoint("sim/flightmodel/cyclic/cyclic_elev_command"));
dpMeasured.push_back(DataPoint("sim/flightmodel/cyclic/cyclic_ailn_command"));
dpMeasured.push_back(DataPoint("sim/flightmodel/cyclic/sidecant"));
dpMeasured.push_back(DataPoint("sim/flightmodel/cyclic/vertcant"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/ENGN_N2_"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/ENGN_EGT"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/ENGN_ITT"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/ENGN_CHT"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/ENGN_EGT_c"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/ENGN_ITT_c"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/ENGN_CHT_c"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/ENGN_bat_amp"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/ENGN_bat_volt"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/ENGN_cowl"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/ENGN_EPR"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/ENGN_FF_"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/ENGN_gen_amp"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/ENGN_heat"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/ENGN_mixt"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/ENGN_MPR"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/ENGN_N1_"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/ENGN_oil_press_psi"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/ENGN_oil_temp_c"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/ENGN_oil_temp"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/ENGN_oil_press"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/ENGN_power"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/ENGN_prop"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/ENGN_sigma"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/ENGN_thro"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/ENGN_thro_use"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/ENGN_thro_override"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/ENGN_TRQ"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/ENGN_running"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/ENGN_burning"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/ENGN_propmode"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/ENGN_burnrat"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/ENGN_oil_quan"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/ENGN_oil_lube_rat"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/ENGN_crbice"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/ENGN_tacrad"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/POINT_pitch_deg"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/POINT_prop_eff"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/POINT_tacrad"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/POINT_thrust"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/POINT_drag_TRQ"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/POINT_cone_rad"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/POINT_side_wash"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/POINT_XYZ"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/POINT_pitch_deg_use"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/POINT_prop_ang_deg"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/burner_enabled"));
dpMeasured.push_back(DataPoint("sim/flightmodel/engine/burner_level"));
dpMeasured.push_back(DataPoint("sim/flightmodel/failures/frm_ice"));
dpMeasured.push_back(DataPoint("sim/flightmodel/failures/pitot_ice"));
dpMeasured.push_back(DataPoint("sim/flightmodel/failures/pitot_ice2"));
dpMeasured.push_back(DataPoint("sim/flightmodel/failures/prop_ice"));
dpMeasured.push_back(DataPoint("sim/flightmodel/failures/inlet_ice"));
dpMeasured.push_back(DataPoint("sim/flightmodel/failures/window_ice"));
dpMeasured.push_back(DataPoint("sim/flightmodel/failures/aoa_ice"));
dpMeasured.push_back(DataPoint("sim/flightmodel/failures/stallwarning"));
dpMeasured.push_back(DataPoint("sim/flightmodel/failures/over_g"));
dpMeasured.push_back(DataPoint("sim/flightmodel/failures/over_vne"));
dpMeasured.push_back(DataPoint("sim/flightmodel/failures/over_vfe"));
dpMeasured.push_back(DataPoint("sim/flightmodel/failures/over_vle"));
dpMeasured.push_back(DataPoint("sim/flightmodel/failures/onground_any"));
dpMeasured.push_back(DataPoint("sim/flightmodel/failures/onground_all"));
dpMeasured.push_back(DataPoint("sim/flightmodel/failures/smoking"));
dpMeasured.push_back(DataPoint("sim/flightmodel/failures/lo_rotor_warning"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/fnrml_aero"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/faxil_aero"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/fside_aero"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/fnrml_prop"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/faxil_prop"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/fside_prop"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/faxil_gear"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/fside_gear"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/fnrml_gear"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/faxil_total"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/fside_total"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/fnrml_total"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/L_aero"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/M_aero"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/N_aero"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/L_prop"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/M_prop"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/N_prop"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/L_gear"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/M_gear"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/N_gear"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/L_mass"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/M_mass"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/N_mass"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/L_total"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/M_total"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/N_total"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/g_nrml"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/g_axil"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/g_side"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/vx_air_on_acf"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/vy_air_on_acf"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/vz_air_on_acf"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/vx_acf_axis"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/vy_acf_axis"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/vz_acf_axis"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/Q_rotor_rad"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/R_rotor_rad"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/lift_path_axis"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/drag_path_axis"));
dpMeasured.push_back(DataPoint("sim/flightmodel/forces/side_path_axis"));
dpMeasured.push_back(DataPoint("sim/flightmodel/jetwash/DVinc"));
dpMeasured.push_back(DataPoint("sim/flightmodel/jetwash/ringDVinc"));
dpMeasured.push_back(DataPoint("sim/flightmodel/misc/ett_size"));
dpMeasured.push_back(DataPoint("sim/flightmodel/misc/jett_len"));
dpMeasured.push_back(DataPoint("sim/flightmodel/misc/g_total"));
dpMeasured.push_back(DataPoint("sim/flightmodel/misc/nosewheel_speed"));
dpMeasured.push_back(DataPoint("sim/flightmodel/misc/wing_tilt_ptch"));
dpMeasured.push_back(DataPoint("sim/flightmodel/misc/wing_tilt_roll"));
dpMeasured.push_back(DataPoint("sim/flightmodel/misc/jato_left"));
dpMeasured.push_back(DataPoint("sim/flightmodel/misc/displace_rat"));
dpMeasured.push_back(DataPoint("sim/flightmodel/misc/h_ind"));
dpMeasured.push_back(DataPoint("sim/flightmodel/misc/h_ind2"));
dpMeasured.push_back(DataPoint("sim/flightmodel/misc/h_ind_copilot"));
dpMeasured.push_back(DataPoint("sim/flightmodel/misc/h_ind_copilot2"));
dpMeasured.push_back(DataPoint("sim/flightmodel/misc/machno"));
dpMeasured.push_back(DataPoint("sim/flightmodel/misc/Qstatic"));
dpMeasured.push_back(DataPoint("sim/flightmodel/misc/turnrate_roll"));
dpMeasured.push_back(DataPoint("sim/flightmodel/misc/turnrate_roll2"));
dpMeasured.push_back(DataPoint("sim/flightmodel/misc/turnrate_noroll"));
dpMeasured.push_back(DataPoint("sim/flightmodel/misc/turnrate_noroll2"));
dpMeasured.push_back(DataPoint("sim/flightmodel/misc/slip"));
dpMeasured.push_back(DataPoint("sim/flightmodel/misc/rocket_mode"));
dpMeasured.push_back(DataPoint("sim/flightmodel/misc/rocket_timeout"));
dpMeasured.push_back(DataPoint("sim/flightmodel/misc/prop_ospeed_test_timeout"));
dpMeasured.push_back(DataPoint("sim/flightmodel/misc/blown_flap_engage_rat"));
dpMeasured.push_back(DataPoint("sim/flightmodel/misc/lift_fan_total_power"));
dpMeasured.push_back(DataPoint("sim/flightmodel/misc/stab_ptch_test"));
dpMeasured.push_back(DataPoint("sim/flightmodel/misc/stab_hdng_test"));
dpMeasured.push_back(DataPoint("sim/flightmodel/misc/cgz_ref_to_default"));
dpMeasured.push_back(DataPoint("sim/flightmodel/misc/Q_centroid_MULT"));
dpMeasured.push_back(DataPoint("sim/flightmodel/misc/C_m"));
dpMeasured.push_back(DataPoint("sim/flightmodel/misc/C_n"));
dpMeasured.push_back(DataPoint("sim/flightmodel/misc/cl_overall"));
dpMeasured.push_back(DataPoint("sim/flightmodel/misc/cd_overall"));
dpMeasured.push_back(DataPoint("sim/flightmodel/misc/l_o_d"));
dpMeasured.push_back(DataPoint("sim/flightmodel/misc/act_frc_ptch_lb"));
dpMeasured.push_back(DataPoint("sim/flightmodel/misc/act_frc_roll_lb"));
dpMeasured.push_back(DataPoint("sim/flightmodel/misc/act_frc_hdng_lb"));
dpMeasured.push_back(DataPoint("sim/flightmodel/misc/act_frc_lbrk_lb"));
dpMeasured.push_back(DataPoint("sim/flightmodel/misc/act_frc_rbrk_lb"));
dpMeasured.push_back(DataPoint("sim/flightmodel/ground/surface_texture_type"));
dpMeasured.push_back(DataPoint("sim/flightmodel/ground/plugin_ground_center"));
dpMeasured.push_back(DataPoint("sim/flightmodel/ground/plugin_ground_slope_normal"));
dpMeasured.push_back(DataPoint("sim/flightmodel/ground/plugin_ground_terrain_velocity"));
dpMeasured.push_back(DataPoint("sim/flightmodel/movingparts/gear1def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/movingparts/gear2def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/movingparts/gear3def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/movingparts/gear4def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/movingparts/gear5def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/parts/v_el"));
dpMeasured.push_back(DataPoint("sim/flightmodel/parts/alpha_el"));
dpMeasured.push_back(DataPoint("sim/flightmodel/parts/del_dir"));
dpMeasured.push_back(DataPoint("sim/flightmodel/parts/cl_el_raw"));
dpMeasured.push_back(DataPoint("sim/flightmodel/parts/CL_grndeffect"));
dpMeasured.push_back(DataPoint("sim/flightmodel/parts/CD_grndeffect"));
dpMeasured.push_back(DataPoint("sim/flightmodel/parts/wash_grndeffect"));
dpMeasured.push_back(DataPoint("sim/flightmodel/parts/Q_centroid_loc"));
dpMeasured.push_back(DataPoint("sim/flightmodel/parts/Q_centroid_MULT"));
dpMeasured.push_back(DataPoint("sim/flightmodel/parts/stalled"));
dpMeasured.push_back(DataPoint("sim/flightmodel/parts/tire_drag_dis"));
dpMeasured.push_back(DataPoint("sim/flightmodel/parts/tire_speed_term"));
dpMeasured.push_back(DataPoint("sim/flightmodel/parts/tire_speed_now"));
dpMeasured.push_back(DataPoint("sim/flightmodel/parts/tire_prop_rot"));
dpMeasured.push_back(DataPoint("sim/flightmodel/parts/tire_x_no_deflection"));
dpMeasured.push_back(DataPoint("sim/flightmodel/parts/tire_y_no_deflection"));
dpMeasured.push_back(DataPoint("sim/flightmodel/parts/tire_z_no_deflection"));
dpMeasured.push_back(DataPoint("sim/flightmodel/parts/tire_vrt_def_veh"));
dpMeasured.push_back(DataPoint("sim/flightmodel/parts/tire_vrt_frc_veh"));
dpMeasured.push_back(DataPoint("sim/flightmodel/parts/tire_steer_cmd"));
dpMeasured.push_back(DataPoint("sim/flightmodel/parts/tire_steer_act"));
dpMeasured.push_back(DataPoint("sim/flightmodel/parts/nrml_force"));
dpMeasured.push_back(DataPoint("sim/flightmodel/parts/axil_force"));
dpMeasured.push_back(DataPoint("sim/flightmodel/parts/force_XYZ"));
dpMeasured.push_back(DataPoint("sim/flightmodel/parts/flap_def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/parts/flap2_def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/parts/elev_cont_def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/parts/elev_trim_def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/parts/rudd_cont_def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/parts/rudd2_cont_def"));
dpMeasured.push_back(DataPoint("sim/flightmodel/parts/elem_inc"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/local_x"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/local_y"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/local_z"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/lat_ref"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/lon_ref"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/latitude"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/longitude"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/elevation"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/theta"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/phi"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/psi"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/magpsi"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/local_vx"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/local_vy"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/local_vz"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/local_ax"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/local_ay"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/local_az"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/alpha"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/beta"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/vpath"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/hpath"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/groundspeed"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/indicated_airspeed"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/indicated_airspeed2"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/true_airspeed"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/magnetic_variation"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/M"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/N"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/L"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/P"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/Q"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/R"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/P_dot"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/Q_dot"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/R_dot"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/Prad"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/Qrad"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/Rrad"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/q"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/vh_ind"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/vh_ind_fpm"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/vh_ind_fpm2"));
dpMeasured.push_back(DataPoint("sim/flightmodel/position/y_agl"));
dpMeasured.push_back(DataPoint("sim/flightmodel/transmissions/xmsn_press"));
dpMeasured.push_back(DataPoint("sim/flightmodel/transmissions/xmsn_temp"));
dpMeasured.push_back(DataPoint("sim/flightmodel/weight/m_fixed"));
dpMeasured.push_back(DataPoint("sim/flightmodel/weight/m_total"));
dpMeasured.push_back(DataPoint("sim/flightmodel/weight/m_fuel"));
dpMeasured.push_back(DataPoint("sim/flightmodel/weight/m_fuel1"));
dpMeasured.push_back(DataPoint("sim/flightmodel/weight/m_fuel2"));
dpMeasured.push_back(DataPoint("sim/flightmodel/weight/m_fuel3"));
dpMeasured.push_back(DataPoint("sim/flightmodel/weight/m_jettison"));
dpMeasured.push_back(DataPoint("sim/flightmodel/weight/m_fuel_total"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/draw_object_x"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/draw_object_y"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/draw_object_z"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/draw_object_psi"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/draw_light_level"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/airport_beacon_rotation"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/windsock_psi"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/windsock_the"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/windsock_phi"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/crane_psi"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/buoy_height"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/ping_pong_2"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/sin_wave_2"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/obj_wigwag_brightness"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/carrier_blast_def_lf"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/carrier_blast_def_rf"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/carrier_blast_def_lr"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/carrier_blast_def_rr"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/level_crossing_gate"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/birds/wing_flap_deg"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/deer/deer_run_cycle"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/deer/deer_turn_cycle"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/flasher"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/pulse"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/strobe_v7"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/traffic_light"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/normal"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/airport_beacon"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/airport_beacon_flash"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/vasi_papi"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/vasi3"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/rabbit"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/strobe"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/wigwag"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/carrier_waveoff"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/fresnel_vertical"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/fresnel_horizontal"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/airplane_landing_light"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/airplane_landing_light_flash"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/airplane_landing_light_spill"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/airplane_generic_light"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/airplane_generic_light_flash"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/airplane_generic_light_spill"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/airplane_taxi_light"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/airplane_taxi_light_flash"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/airplane_taxi_light_spill"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/airplane_spot_light"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/airplane_spot_light_flash"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/airplane_spot_light_spill"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/airplane_beacon_light"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/airplane_navigation_light"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/airplane_strobe_light"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/airplane_beacon_light_dir"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/airplane_navigation_light_dir"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/airplane_strobe_light_dir"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/airplane_beacon_light_spill"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/airplane_navigation_light_spill"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/airplane_strobe_light_spill"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/airplane_panel_spill"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/airplane_inst_spill"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/airplane_beacon_light_rotate"));
dpMeasured.push_back(DataPoint("sim/graphics/animation/lights/airplane_beacon_light_rotate_spill"));
dpMeasured.push_back(DataPoint("sim/graphics/colors/background_rgb"));
dpMeasured.push_back(DataPoint("sim/graphics/colors/menu_dark_rgb"));
dpMeasured.push_back(DataPoint("sim/graphics/colors/menu_hilite_rgb"));
dpMeasured.push_back(DataPoint("sim/graphics/colors/menu_lite_rgb"));
dpMeasured.push_back(DataPoint("sim/graphics/colors/menu_text_rgb"));
dpMeasured.push_back(DataPoint("sim/graphics/colors/menu_text_disabled_rgb"));
dpMeasured.push_back(DataPoint("sim/graphics/colors/subtitle_text_rgb"));
dpMeasured.push_back(DataPoint("sim/graphics/colors/tab_front_rgb"));
dpMeasured.push_back(DataPoint("sim/graphics/colors/tab_back_rgb"));
dpMeasured.push_back(DataPoint("sim/graphics/colors/caption_text_rgb"));
dpMeasured.push_back(DataPoint("sim/graphics/colors/list_text_rgb"));
dpMeasured.push_back(DataPoint("sim/graphics/colors/glass_text_rgb"));
dpMeasured.push_back(DataPoint("sim/graphics/colors/plane_path1_3d_rgb"));
dpMeasured.push_back(DataPoint("sim/graphics/colors/plane_path2_3d_rgb"));
dpMeasured.push_back(DataPoint("sim/graphics/misc/show_panel_click_spots"));
dpMeasured.push_back(DataPoint("sim/graphics/misc/show_instrument_descriptions"));
dpMeasured.push_back(DataPoint("sim/graphics/misc/cockpit_light_level_r"));
dpMeasured.push_back(DataPoint("sim/graphics/misc/cockpit_light_level_g"));
dpMeasured.push_back(DataPoint("sim/graphics/misc/cockpit_light_level_b"));
dpMeasured.push_back(DataPoint("sim/graphics/misc/outside_light_level_r"));
dpMeasured.push_back(DataPoint("sim/graphics/misc/outside_light_level_g"));
dpMeasured.push_back(DataPoint("sim/graphics/misc/outside_light_level_b"));
dpMeasured.push_back(DataPoint("sim/graphics/misc/light_attenuation"));
dpMeasured.push_back(DataPoint("sim/graphics/misc/use_proportional_fonts"));
dpMeasured.push_back(DataPoint("sim/graphics/misc/default_scroll_pos"));
dpMeasured.push_back(DataPoint("sim/graphics/misc/current_scroll_pos"));
dpMeasured.push_back(DataPoint("sim/graphics/misc/current_scroll_mode"));
dpMeasured.push_back(DataPoint("sim/graphics/misc/default_scroll_pos_x"));
dpMeasured.push_back(DataPoint("sim/graphics/misc/current_scroll_pos_x"));
dpMeasured.push_back(DataPoint("sim/graphics/misc/current_scroll_mode_x"));
dpMeasured.push_back(DataPoint("sim/graphics/scenery/current_planet"));
dpMeasured.push_back(DataPoint("sim/graphics/scenery/percent_lights_on"));
dpMeasured.push_back(DataPoint("sim/graphics/scenery/sun_pitch_degrees"));
dpMeasured.push_back(DataPoint("sim/graphics/scenery/sun_heading_degrees"));
dpMeasured.push_back(DataPoint("sim/graphics/scenery/moon_pitch_degrees"));
dpMeasured.push_back(DataPoint("sim/graphics/scenery/moon_heading_degrees"));
dpMeasured.push_back(DataPoint("sim/graphics/scenery/airport_light_level"));
dpMeasured.push_back(DataPoint("sim/graphics/settings/rendering_res"));
dpMeasured.push_back(DataPoint("sim/graphics/settings/dim_gload"));
dpMeasured.push_back(DataPoint("sim/graphics/settings/draw_forestfires"));
dpMeasured.push_back(DataPoint("sim/graphics/settings/non_proportional_vertical_FOV"));
dpMeasured.push_back(DataPoint("sim/graphics/settings/dome_projection"));
dpMeasured.push_back(DataPoint("sim/graphics/settings/local_map/show_profile"));
dpMeasured.push_back(DataPoint("sim/graphics/settings/local_map/profile_view_is_time"));
dpMeasured.push_back(DataPoint("sim/graphics/view/view_type"));
dpMeasured.push_back(DataPoint("sim/graphics/view/panel_render_type"));
dpMeasured.push_back(DataPoint("sim/graphics/view/world_render_type"));
dpMeasured.push_back(DataPoint("sim/graphics/view/view_is_external"));
dpMeasured.push_back(DataPoint("sim/graphics/view/view_x"));
dpMeasured.push_back(DataPoint("sim/graphics/view/view_y"));
dpMeasured.push_back(DataPoint("sim/graphics/view/view_z"));
dpMeasured.push_back(DataPoint("sim/graphics/view/view_pitch"));
dpMeasured.push_back(DataPoint("sim/graphics/view/view_roll"));
dpMeasured.push_back(DataPoint("sim/graphics/view/view_heading"));
dpMeasured.push_back(DataPoint("sim/graphics/view/cockpit_pitch"));
dpMeasured.push_back(DataPoint("sim/graphics/view/cockpit_roll"));
dpMeasured.push_back(DataPoint("sim/graphics/view/cockpit_heading"));
dpMeasured.push_back(DataPoint("sim/graphics/view/field_of_view_deg"));
dpMeasured.push_back(DataPoint("sim/graphics/view/field_of_view_vertical_deg"));
dpMeasured.push_back(DataPoint("sim/graphics/view/field_of_view_horizontal_deg"));
dpMeasured.push_back(DataPoint("sim/graphics/view/field_of_view_horizontal_ratio"));
dpMeasured.push_back(DataPoint("sim/graphics/view/field_of_view_roll_deg"));
dpMeasured.push_back(DataPoint("sim/graphics/view/window_width"));
dpMeasured.push_back(DataPoint("sim/graphics/view/window_height"));
dpMeasured.push_back(DataPoint("sim/graphics/view/visibility_effective_m"));
dpMeasured.push_back(DataPoint("sim/graphics/view/visibility_terrain_m"));
dpMeasured.push_back(DataPoint("sim/graphics/view/visibility_framerate_ratio"));
dpMeasured.push_back(DataPoint("sim/graphics/view/visibility_math_level"));
dpMeasured.push_back(DataPoint("sim/graphics/view/panel_total_pnl_l"));
dpMeasured.push_back(DataPoint("sim/graphics/view/panel_total_pnl_b"));
dpMeasured.push_back(DataPoint("sim/graphics/view/panel_total_pnl_r"));
dpMeasured.push_back(DataPoint("sim/graphics/view/panel_total_pnl_t"));
dpMeasured.push_back(DataPoint("sim/graphics/view/panel_visible_pnl_l"));
dpMeasured.push_back(DataPoint("sim/graphics/view/panel_visible_pnl_b"));
dpMeasured.push_back(DataPoint("sim/graphics/view/panel_visible_pnl_r"));
dpMeasured.push_back(DataPoint("sim/graphics/view/panel_visible_pnl_t"));
dpMeasured.push_back(DataPoint("sim/graphics/view/panel_total_win_l"));
dpMeasured.push_back(DataPoint("sim/graphics/view/panel_total_win_b"));
dpMeasured.push_back(DataPoint("sim/graphics/view/panel_total_win_r"));
dpMeasured.push_back(DataPoint("sim/graphics/view/panel_total_win_t"));
dpMeasured.push_back(DataPoint("sim/graphics/view/panel_visible_win_l"));
dpMeasured.push_back(DataPoint("sim/graphics/view/panel_visible_win_b"));
dpMeasured.push_back(DataPoint("sim/graphics/view/panel_visible_win_r"));
dpMeasured.push_back(DataPoint("sim/graphics/view/panel_visible_win_t"));
dpMeasured.push_back(DataPoint("sim/graphics/view/pilots_head_x"));
dpMeasured.push_back(DataPoint("sim/graphics/view/pilots_head_y"));
dpMeasured.push_back(DataPoint("sim/graphics/view/pilots_head_z"));
dpMeasured.push_back(DataPoint("sim/graphics/view/pilots_head_psi"));
dpMeasured.push_back(DataPoint("sim/graphics/view/pilots_head_the"));
dpMeasured.push_back(DataPoint("sim/graphics/view/click_3d_x"));
dpMeasured.push_back(DataPoint("sim/graphics/view/click_3d_y"));
dpMeasured.push_back(DataPoint("sim/graphics/view/click_3d_x_pixels"));
dpMeasured.push_back(DataPoint("sim/graphics/view/click_3d_y_pixels"));
dpMeasured.push_back(DataPoint("sim/graphics/view/local_map_l"));
dpMeasured.push_back(DataPoint("sim/graphics/view/local_map_b"));
dpMeasured.push_back(DataPoint("sim/graphics/view/local_map_r"));
dpMeasured.push_back(DataPoint("sim/graphics/view/local_map_t"));
dpMeasured.push_back(DataPoint("sim/graphics/view/dome_number_of_passes"));
dpMeasured.push_back(DataPoint("sim/graphics/view/dome_offset_heading"));
dpMeasured.push_back(DataPoint("sim/graphics/view/dome_offset_pitch"));
dpMeasured.push_back(DataPoint("sim/joystick/has_joystick"));
dpMeasured.push_back(DataPoint("sim/joystick/mouse_is_joystick"));
dpMeasured.push_back(DataPoint("sim/joystick/yoke_pitch_ratio"));
dpMeasured.push_back(DataPoint("sim/joystick/yolk_pitch_ratio"));
dpMeasured.push_back(DataPoint("sim/joystick/yoke_roll_ratio"));
dpMeasured.push_back(DataPoint("sim/joystick/yolk_roll_ratio"));
dpMeasured.push_back(DataPoint("sim/joystick/yoke_heading_ratio"));
dpMeasured.push_back(DataPoint("sim/joystick/yolk_heading_ratio"));
dpMeasured.push_back(DataPoint("sim/joystick/artstab_pitch_ratio"));
dpMeasured.push_back(DataPoint("sim/joystick/artstab_roll_ratio"));
dpMeasured.push_back(DataPoint("sim/joystick/artstab_heading_ratio"));
dpMeasured.push_back(DataPoint("sim/joystick/servo_pitch_ratio"));
dpMeasured.push_back(DataPoint("sim/joystick/servo_roll_ratio"));
dpMeasured.push_back(DataPoint("sim/joystick/servo_heading_ratio"));
dpMeasured.push_back(DataPoint("sim/joystick/FC_hdng"));
dpMeasured.push_back(DataPoint("sim/joystick/FC_ptch"));
dpMeasured.push_back(DataPoint("sim/joystick/FC_roll"));
dpMeasured.push_back(DataPoint("sim/joystick/joystick_pitch_nullzone"));
dpMeasured.push_back(DataPoint("sim/joystick/joystick_roll_nullzone"));
dpMeasured.push_back(DataPoint("sim/joystick/joystick_heading_nullzone"));
dpMeasured.push_back(DataPoint("sim/joystick/joystick_pitch_center"));
dpMeasured.push_back(DataPoint("sim/joystick/joystick_roll_center"));
dpMeasured.push_back(DataPoint("sim/joystick/joystick_heading_center"));
dpMeasured.push_back(DataPoint("sim/joystick/joystick_pitch_augment"));
dpMeasured.push_back(DataPoint("sim/joystick/joystick_roll_augment"));
dpMeasured.push_back(DataPoint("sim/joystick/joystick_heading_augment"));
dpMeasured.push_back(DataPoint("sim/joystick/joystick_pitch_sensitivity"));
dpMeasured.push_back(DataPoint("sim/joystick/joystick_roll_sensitivity"));
dpMeasured.push_back(DataPoint("sim/joystick/joystick_heading_sensitivity"));
dpMeasured.push_back(DataPoint("sim/joystick/joystick_axis_assignments"));
dpMeasured.push_back(DataPoint("sim/joystick/joystick_button_assignments"));
dpMeasured.push_back(DataPoint("sim/joystick/joystick_axis_reverse"));
dpMeasured.push_back(DataPoint("sim/joystick/joystick_axis_values"));
dpMeasured.push_back(DataPoint("sim/joystick/joystick_axis_minimum"));
dpMeasured.push_back(DataPoint("sim/joystick/joystick_axis_maximum"));
dpMeasured.push_back(DataPoint("sim/joystick/joystick_button_values"));
dpMeasured.push_back(DataPoint("sim/joystick/eq_ped_nobrk"));
dpMeasured.push_back(DataPoint("sim/joystick/eq_ped_wibrk"));
dpMeasured.push_back(DataPoint("sim/joystick/eq_pfc_pedals"));
dpMeasured.push_back(DataPoint("sim/joystick/eq_pfc_yoke"));
dpMeasured.push_back(DataPoint("sim/joystick/eq_pfc_throt"));
dpMeasured.push_back(DataPoint("sim/joystick/eq_pfc_avio"));
dpMeasured.push_back(DataPoint("sim/joystick/eq_pfc_centercon"));
dpMeasured.push_back(DataPoint("sim/joystick/eq_pfc_elec_trim"));
dpMeasured.push_back(DataPoint("sim/joystick/eq_pfc_brake_tog"));
dpMeasured.push_back(DataPoint("sim/joystick/eq_pfc_dual_cowl"));
dpMeasured.push_back(DataPoint("sim/joystick/fire_key_is_down"));
dpMeasured.push_back(DataPoint("sim/joystick/has_certified_roll"));
dpMeasured.push_back(DataPoint("sim/joystick/has_certified_pitch"));
dpMeasured.push_back(DataPoint("sim/joystick/has_certified_heading"));
dpMeasured.push_back(DataPoint("sim/joystick/has_certified_brakes"));
dpMeasured.push_back(DataPoint("sim/joystick/has_certified_throttle"));
dpMeasured.push_back(DataPoint("sim/joystick/has_certified_prop"));
dpMeasured.push_back(DataPoint("sim/joystick/has_certified_mixture"));
dpMeasured.push_back(DataPoint("sim/multiplayer/aircraft_is_hit"));
dpMeasured.push_back(DataPoint("sim/multiplayer/aircraft_is_down"));
dpMeasured.push_back(DataPoint("sim/multiplayer/controls/yoke_pitch_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/controls/yoke_roll_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/controls/yoke_heading_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/controls/gear_request"));
dpMeasured.push_back(DataPoint("sim/multiplayer/controls/flap_request"));
dpMeasured.push_back(DataPoint("sim/multiplayer/controls/speed_brake_request"));
dpMeasured.push_back(DataPoint("sim/multiplayer/controls/vector_request"));
dpMeasured.push_back(DataPoint("sim/multiplayer/controls/sweep__request"));
dpMeasured.push_back(DataPoint("sim/multiplayer/controls/incidence_request"));
dpMeasured.push_back(DataPoint("sim/multiplayer/controls/dihedral_request"));
dpMeasured.push_back(DataPoint("sim/multiplayer/controls/tail_lock_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/controls/l_brake_add"));
dpMeasured.push_back(DataPoint("sim/multiplayer/controls/r_brake_add"));
dpMeasured.push_back(DataPoint("sim/multiplayer/controls/parking_brake"));
dpMeasured.push_back(DataPoint("sim/multiplayer/controls/aileron_trim"));
dpMeasured.push_back(DataPoint("sim/multiplayer/controls/elevator_trim"));
dpMeasured.push_back(DataPoint("sim/multiplayer/controls/rotor_trim"));
dpMeasured.push_back(DataPoint("sim/multiplayer/controls/rudder_trim"));
dpMeasured.push_back(DataPoint("sim/multiplayer/controls/engine_throttle_request"));
dpMeasured.push_back(DataPoint("sim/multiplayer/controls/engine_prop_request"));
dpMeasured.push_back(DataPoint("sim/multiplayer/controls/engine_pitch_request"));
dpMeasured.push_back(DataPoint("sim/multiplayer/controls/engine_mixture_request"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane1_x"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane1_y"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane1_z"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane1_the"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane1_phi"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane1_psi"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane1_gear_deploy"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane1_flap_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane1_flap_ratio2"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane1_spoiler_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane1_speedbrake_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane1_slat_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane1_wing_sweep"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane1_throttle"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane1_yolk_pitch"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane1_yolk_roll"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane1_yolk_yaw"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane2_x"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane2_y"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane2_z"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane2_the"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane2_phi"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane2_psi"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane2_gear_deploy"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane2_flap_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane2_flap_ratio2"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane2_spoiler_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane2_speedbrake_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane2_sla1_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane2_wing_sweep"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane2_throttle"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane2_yolk_pitch"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane2_yolk_roll"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane2_yolk_yaw"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane3_x"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane3_y"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane3_z"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane3_the"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane3_phi"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane3_psi"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane3_gear_deploy"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane3_flap_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane3_flap_ratio2"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane3_spoiler_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane3_speedbrake_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane3_sla1_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane3_wing_sweep"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane3_throttle"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane3_yolk_pitch"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane3_yolk_roll"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane3_yolk_yaw"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane4_x"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane4_y"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane4_z"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane4_the"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane4_phi"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane4_psi"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane4_gear_deploy"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane4_flap_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane4_flap_ratio2"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane4_spoiler_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane4_speedbrake_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane4_sla1_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane4_wing_sweep"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane4_throttle"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane4_yolk_pitch"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane4_yolk_roll"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane4_yolk_yaw"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane5_x"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane5_y"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane5_z"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane5_the"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane5_phi"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane5_psi"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane5_gear_deploy"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane5_flap_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane5_flap_ratio2"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane5_spoiler_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane5_speedbrake_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane5_sla1_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane5_wing_sweep"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane5_throttle"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane5_yolk_pitch"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane5_yolk_roll"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane5_yolk_yaw"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane6_x"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane6_y"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane6_z"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane6_the"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane6_phi"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane6_psi"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane6_gear_deploy"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane6_flap_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane6_flap_ratio2"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane6_spoiler_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane6_speedbrake_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane6_sla1_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane6_wing_sweep"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane6_throttle"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane6_yolk_pitch"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane6_yolk_roll"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane6_yolk_yaw"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane7_x"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane7_y"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane7_z"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane7_the"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane7_phi"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane7_psi"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane7_gear_deploy"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane7_flap_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane7_flap_ratio2"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane7_spoiler_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane7_speedbrake_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane7_sla1_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane7_wing_sweep"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane7_throttle"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane7_yolk_pitch"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane7_yolk_roll"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane7_yolk_yaw"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane8_x"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane8_y"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane8_z"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane8_the"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane8_phi"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane8_psi"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane8_gear_deploy"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane8_flap_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane8_flap_ratio2"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane8_spoiler_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane8_speedbrake_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane8_sla1_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane8_wing_sweep"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane8_throttle"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane8_yolk_pitch"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane8_yolk_roll"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane8_yolk_yaw"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane9_x"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane9_y"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane9_z"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane9_the"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane9_phi"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane9_psi"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane9_gear_deploy"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane9_flap_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane9_flap_ratio2"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane9_spoiler_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane9_speedbrake_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane9_sla1_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane9_wing_sweep"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane9_throttle"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane9_yolk_pitch"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane9_yolk_roll"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane9_yolk_yaw"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane1_lat"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane1_lon"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane1_el"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane1_v_x"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane1_v_y"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane1_v_z"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane2_lat"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane2_lon"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane2_el"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane2_v_x"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane2_v_y"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane2_v_z"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane3_lat"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane3_lon"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane3_el"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane3_v_x"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane3_v_y"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane3_v_z"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane4_lat"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane4_lon"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane4_el"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane4_v_x"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane4_v_y"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane4_v_z"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane5_lat"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane5_lon"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane5_el"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane5_v_x"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane5_v_y"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane5_v_z"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane6_lat"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane6_lon"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane6_el"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane6_v_x"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane6_v_y"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane6_v_z"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane7_lat"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane7_lon"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane7_el"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane7_v_x"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane7_v_y"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane7_v_z"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane8_lat"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane8_lon"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane8_el"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane8_v_x"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane8_v_y"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane8_v_z"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane9_lat"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane9_lon"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane9_el"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane9_v_x"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane9_v_y"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane9_v_z"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane1_beacon_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane1_landing_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane1_nav_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane1_strobe_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane1_taxi_light_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane2_beacon_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane2_landing_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane2_nav_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane2_strobe_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane2_taxi_light_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane3_beacon_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane3_landing_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane3_nav_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane3_strobe_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane3_taxi_light_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane4_beacon_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane4_landing_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane4_nav_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane4_strobe_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane4_taxi_light_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane5_beacon_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane5_landing_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane5_nav_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane5_strobe_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane5_taxi_light_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane6_beacon_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane6_landing_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane6_nav_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane6_strobe_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane6_taxi_light_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane7_beacon_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane7_landing_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane7_nav_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane7_strobe_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane7_taxi_light_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane8_beacon_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane8_landing_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane8_nav_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane8_strobe_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane8_taxi_light_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane9_beacon_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane9_landing_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane9_nav_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane9_strobe_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane9_taxi_light_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane10_beacon_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane10_landing_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane10_nav_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane10_strobe_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane10_taxi_light_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane11_beacon_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane11_landing_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane11_nav_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane11_strobe_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane11_taxi_light_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane12_beacon_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane12_landing_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane12_nav_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane12_strobe_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane12_taxi_light_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane13_beacon_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane13_landing_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane13_nav_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane13_strobe_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane13_taxi_light_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane14_beacon_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane14_landing_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane14_nav_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane14_strobe_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane14_taxi_light_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane15_beacon_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane15_landing_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane15_nav_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane15_strobe_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane15_taxi_light_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane16_beacon_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane16_landing_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane16_nav_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane16_strobe_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane16_taxi_light_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane17_beacon_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane17_landing_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane17_nav_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane17_strobe_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane17_taxi_light_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane18_beacon_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane18_landing_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane18_nav_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane18_strobe_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane18_taxi_light_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane19_beacon_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane19_landing_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane19_nav_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane19_strobe_lights_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane19_taxi_light_on"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane10_x"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane10_y"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane10_z"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane10_the"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane10_phi"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane10_psi"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane10_gear_deploy"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane10_flap_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane10_flap_ratio2"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane10_spoiler_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane10_speedbrake_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane10_sla1_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane10_wing_sweep"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane10_throttle"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane10_yolk_pitch"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane10_yolk_roll"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane10_yolk_yaw"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane10_lat"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane10_lon"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane10_el"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane10_v_x"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane10_v_y"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane10_v_z"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane11_x"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane11_y"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane11_z"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane11_the"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane11_phi"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane11_psi"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane11_gear_deploy"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane11_flap_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane11_flap_ratio2"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane11_spoiler_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane11_speedbrake_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane11_sla1_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane11_wing_sweep"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane11_throttle"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane11_yolk_pitch"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane11_yolk_roll"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane11_yolk_yaw"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane11_lat"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane11_lon"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane11_el"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane11_v_x"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane11_v_y"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane11_v_z"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane12_x"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane12_y"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane12_z"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane12_the"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane12_phi"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane12_psi"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane12_gear_deploy"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane12_flap_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane12_flap_ratio2"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane12_spoiler_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane12_speedbrake_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane12_sla1_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane12_wing_sweep"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane12_throttle"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane12_yolk_pitch"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane12_yolk_roll"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane12_yolk_yaw"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane12_lat"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane12_lon"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane12_el"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane12_v_x"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane12_v_y"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane12_v_z"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane13_x"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane13_y"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane13_z"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane13_the"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane13_phi"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane13_psi"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane13_gear_deploy"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane13_flap_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane13_flap_ratio2"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane13_spoiler_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane13_speedbrake_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane13_sla1_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane13_wing_sweep"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane13_throttle"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane13_yolk_pitch"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane13_yolk_roll"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane13_yolk_yaw"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane13_lat"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane13_lon"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane13_el"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane13_v_x"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane13_v_y"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane13_v_z"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane14_x"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane14_y"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane14_z"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane14_the"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane14_phi"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane14_psi"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane14_gear_deploy"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane14_flap_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane14_flap_ratio2"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane14_spoiler_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane14_speedbrake_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane14_sla1_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane14_wing_sweep"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane14_throttle"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane14_yolk_pitch"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane14_yolk_roll"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane14_yolk_yaw"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane14_lat"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane14_lon"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane14_el"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane14_v_x"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane14_v_y"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane14_v_z"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane15_x"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane15_y"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane15_z"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane15_the"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane15_phi"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane15_psi"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane15_gear_deploy"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane15_flap_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane15_flap_ratio2"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane15_spoiler_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane15_speedbrake_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane15_sla1_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane15_wing_sweep"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane15_throttle"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane15_yolk_pitch"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane15_yolk_roll"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane15_yolk_yaw"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane15_lat"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane15_lon"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane15_el"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane15_v_x"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane15_v_y"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane15_v_z"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane16_x"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane16_y"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane16_z"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane16_the"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane16_phi"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane16_psi"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane16_gear_deploy"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane16_flap_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane16_flap_ratio2"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane16_spoiler_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane16_speedbrake_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane16_sla1_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane16_wing_sweep"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane16_throttle"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane16_yolk_pitch"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane16_yolk_roll"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane16_yolk_yaw"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane16_lat"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane16_lon"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane16_el"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane16_v_x"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane16_v_y"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane16_v_z"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane17_x"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane17_y"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane17_z"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane17_the"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane17_phi"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane17_psi"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane17_gear_deploy"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane17_flap_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane17_flap_ratio2"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane17_spoiler_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane17_speedbrake_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane17_sla1_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane17_wing_sweep"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane17_throttle"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane17_yolk_pitch"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane17_yolk_roll"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane17_yolk_yaw"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane17_lat"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane17_lon"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane17_el"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane17_v_x"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane17_v_y"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane17_v_z"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane18_x"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane18_y"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane18_z"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane18_the"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane18_phi"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane18_psi"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane18_gear_deploy"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane18_flap_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane18_flap_ratio2"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane18_spoiler_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane18_speedbrake_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane18_sla1_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane18_wing_sweep"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane18_throttle"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane18_yolk_pitch"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane18_yolk_roll"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane18_yolk_yaw"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane18_lat"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane18_lon"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane18_el"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane18_v_x"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane18_v_y"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane18_v_z"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane19_x"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane19_y"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane19_z"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane19_the"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane19_phi"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane19_psi"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane19_gear_deploy"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane19_flap_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane19_flap_ratio2"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane19_spoiler_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane19_speedbrake_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane19_sla1_ratio"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane19_wing_sweep"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane19_throttle"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane19_yolk_pitch"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane19_yolk_roll"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane19_yolk_yaw"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane19_lat"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane19_lon"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane19_el"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane19_v_x"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane19_v_y"));
dpMeasured.push_back(DataPoint("sim/multiplayer/position/plane19_v_z"));
dpMeasured.push_back(DataPoint("sim/network/dataout/network_data_rate"));
dpMeasured.push_back(DataPoint("sim/network/dataout/data_to_internet"));
dpMeasured.push_back(DataPoint("sim/network/dataout/data_to_disk"));
dpMeasured.push_back(DataPoint("sim/network/dataout/data_to_graph"));
dpMeasured.push_back(DataPoint("sim/network/dataout/data_to_screen"));
dpMeasured.push_back(DataPoint("sim/network/dataout/dump_parts_props"));
dpMeasured.push_back(DataPoint("sim/network/dataout/dump_parts_wings"));
dpMeasured.push_back(DataPoint("sim/network/dataout/dump_parts_vstabs"));
dpMeasured.push_back(DataPoint("sim/network/dataout/is_external_visual"));
dpMeasured.push_back(DataPoint("sim/network/dataout/is_multiplayer_session"));
dpMeasured.push_back(DataPoint("sim/network/dataout/is_instructor_station"));
dpMeasured.push_back(DataPoint("sim/network/dataout/multiplayer_ip"));
dpMeasured.push_back(DataPoint("sim/network/dataout/external_visual_ip"));
dpMeasured.push_back(DataPoint("sim/network/misc/opentransport_inited"));
dpMeasured.push_back(DataPoint("sim/network/misc/network_time_sec"));
dpMeasured.push_back(DataPoint("sim/physics/earth_mu"));
dpMeasured.push_back(DataPoint("sim/physics/earth_radius_m"));
dpMeasured.push_back(DataPoint("sim/physics/earth_temp_c"));
dpMeasured.push_back(DataPoint("sim/physics/earth_pressure_p"));
dpMeasured.push_back(DataPoint("sim/physics/rho_sea_level"));
dpMeasured.push_back(DataPoint("sim/physics/g_sealevel"));
dpMeasured.push_back(DataPoint("sim/physics/rho_water"));
dpMeasured.push_back(DataPoint("sim/physics/metric_temp"));
dpMeasured.push_back(DataPoint("sim/physics/metric_press"));
dpMeasured.push_back(DataPoint("sim/operation/failures/hydraulic_pressure_ratio"));
dpMeasured.push_back(DataPoint("sim/operation/failures/hydraulic_pressure_ratio2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/oil_power_thrust_ratio"));
dpMeasured.push_back(DataPoint("sim/operation/failures/mean_time_between_failure_hrs"));
dpMeasured.push_back(DataPoint("sim/operation/failures/ram_air_turbine_on"));
dpMeasured.push_back(DataPoint("sim/operation/failures/failures"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_vasi"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_rwy_lites"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_conlock"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_door_open"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ex_power_on"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_pass_o2_on"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fuelcap"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fuel_water"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fuel_type"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fuel_block0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fuel_block1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fuel_block2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fuel_block3"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fuel_block4"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fuel_block5"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fuel_block6"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fuel_block7"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fuel_block8"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_bird_strike"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_wind_shear"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_make_vertigo"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_smoke_cpit"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_vacuum"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_vacuum2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_pitot"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_pitot2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_static"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_static2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_static1_err"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_static2_err"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_esys"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_esys2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_esys3"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_esys4"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_esys5"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_esys6"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_invert0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_invert1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_HVAC"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ss_asi"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ss_ahz"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ss_alt"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ss_tsi"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ss_dgy"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ss_vvi"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_cop_asi"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_cop_ahz"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_cop_alt"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_cop_tsi"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_cop_dgy"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_cop_vvi"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_efis_1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_efis_2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_AOA"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_stall_warn"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_gear_warning"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_nav1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_nav2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_adf1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_adf2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_gps"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_gps2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_dme"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_loc"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_gls"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_gp"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_xpndr"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_marker"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fc_rud_L"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fc_rud_R"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fc_ail_L"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fc_ail_R"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fc_elv_U"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fc_elv_D"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_trim_rud"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_trim_ail"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_trim_elv"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_rud_trim_run"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ail_trim_run"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_elv_trim_run"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fc_slt"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_flap_act"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fc_L_flp"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fc_R_flp"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_L_flp_off"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_R_flp_off"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_lbrakes"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_rbrakes"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_gear_act"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_gear_ind"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_lagear1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_lagear2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_lagear3"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_lagear4"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_lagear5"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_tire1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_tire2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_tire3"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_tire4"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_tire5"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_otto"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_auto_runaway"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_auto_servos"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_servo_ailn"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_servo_elev"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_servo_rudd"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_servo_thro"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_stbaug"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_trotor"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_feather"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_prop_sync"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_throt_lo"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_throt_hi"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fc_thr"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_lites_nav"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_lites_strobe"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_lites_beac"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_lites_taxi"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_lites_land"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_lites_ins"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_clights"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_lites_hud"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_bleed_air_lft"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_bleed_air_rgt"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_APU_press"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_depres_slow"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_depres_fast"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_hydpmp"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_hydpmp2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_hydpmp3"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_hydpmp4"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_hydpmp5"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_hydpmp6"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_hydpmp7"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_hydpmp8"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_hydpmp_ele"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_hydleak"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_hydleak2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_hydoverp"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_hydoverp2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_antice"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ice_window_heat"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ice_inlet_heat"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ice_inlet_heat2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ice_prop_heat"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ice_prop_heat2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ice_pitot_heat1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ice_pitot_heat2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ice_static_heat"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ice_static_heat2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ice_AOA_heat"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ice_AOA_heat2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ice_surf_heat"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ice_surf_heat2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ice_surf_boot"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ice_alt_air1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ice_alt_air2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ice_detect"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_RPM_ind_0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_RPM_ind_1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_MP_ind_0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_MP_ind_1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ITTind0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ITTind1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_EGT_ind_0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_EGT_ind_1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_CHT_ind_0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_CHT_ind_1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_EPRind0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_EPRind1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_TRQind0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_TRQind1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_N1_ind0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_N1_ind1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_N2_ind0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_N2_ind1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_FF_ind0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_FF_ind1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fp_ind_0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fp_ind_1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_oilp_ind_0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_oilp_ind_1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_oilt_ind_0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_oilt_ind_1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_g430_gps1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_g430_gps2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_g430_rad1_tune"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_g430_rad2_tune"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_g_gia1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_g_gia2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_g_arthorz"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_adc_comp"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_g_gea"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_g_asi"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_g_alt"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_g_magmtr"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_g_vvi"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_bad_mpr"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_bad_ff"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_bad_egt"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_bad_itt"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_bad_cht"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_bad_rpm"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_bad_oilp"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_bad_oilt"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_g_oat"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_g_fuel"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_g_gen1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_g_gen2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_g_bat1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_g_bat2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_g_bus1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_g_bus2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_gen0_lo"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_gen0_hi"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_gen1_lo"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_gen1_hi"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_bat0_lo"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_bat0_hi"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_bat1_lo"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_bat1_hi"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_magLFT0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_magLFT1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_magLFT2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_magLFT3"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_magLFT4"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_magLFT5"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_magLFT6"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_magLFT7"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_magRGT0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_magRGT1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_magRGT2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_magRGT3"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_magRGT4"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_magRGT5"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_magRGT6"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_magRGT7"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_engfir0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_engfir1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_engfir2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_engfir3"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_engfir4"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_engfir5"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_engfir6"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_engfir7"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_engfla0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_engfla1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_engfla2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_engfla3"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_engfla4"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_engfla5"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_engfla6"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_engfla7"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_engfai0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_engfai1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_engfai2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_engfai3"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_engfai4"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_engfai5"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_engfai6"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_engfai7"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_engsep0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_engsep1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_engsep2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_engsep3"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_engsep4"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_engsep5"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_engsep6"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_engsep7"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fuepmp0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fuepmp1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fuepmp2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fuepmp3"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fuepmp4"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fuepmp5"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fuepmp6"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fuepmp7"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ele_fuepmp0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ele_fuepmp1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ele_fuepmp2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ele_fuepmp3"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ele_fuepmp4"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ele_fuepmp5"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ele_fuepmp6"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ele_fuepmp7"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_eng_lo0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_eng_lo1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_eng_lo2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_eng_lo3"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_eng_lo4"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_eng_lo5"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_eng_lo6"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_eng_lo7"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fuelfl0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fuelfl1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fuelfl2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fuelfl3"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fuelfl4"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fuelfl5"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fuelfl6"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fuelfl7"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_startr0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_startr1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_startr2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_startr3"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_startr4"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_startr5"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_startr6"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_startr7"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_hunsta0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_hunsta1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_hunsta2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_hunsta3"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_hunsta4"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_hunsta5"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_hunsta6"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_hunsta7"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_hotsta0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_hotsta1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_hotsta2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_hotsta3"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_hotsta4"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_hotsta5"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_hotsta6"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_hotsta7"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_comsta0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_comsta1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_comsta2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_comsta3"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_comsta4"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_comsta5"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_comsta6"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_comsta7"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_runITT0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_runITT1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_runITT2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_runITT3"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_runITT4"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_runITT5"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_runITT6"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_runITT7"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_govnr_0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_govnr_1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_govnr_2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_govnr_3"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_govnr_4"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_govnr_5"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_govnr_6"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_govnr_7"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fadec_0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fadec_1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fadec_2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fadec_3"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fadec_4"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fadec_5"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fadec_6"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_fadec_7"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_genera0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_genera1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_genera2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_genera3"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_genera4"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_genera5"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_genera6"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_genera7"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_batter0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_batter1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_batter2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_batter3"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_batter4"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_batter5"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_batter6"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_batter7"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ignitr0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ignitr1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ignitr2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ignitr3"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ignitr4"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ignitr5"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ignitr6"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_ignitr7"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_oilpmp0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_oilpmp1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_oilpmp2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_oilpmp3"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_oilpmp4"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_oilpmp5"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_oilpmp6"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_oilpmp7"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_prpfin0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_prpfin1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_prpfin2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_prpfin3"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_prpfin4"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_prpfin5"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_prpfin6"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_prpfin7"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_prpcrs0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_prpcrs1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_prpcrs2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_prpcrs3"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_prpcrs4"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_prpcrs5"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_prpcrs6"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_prpcrs7"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_pshaft0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_pshaft1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_pshaft2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_pshaft3"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_pshaft4"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_pshaft5"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_pshaft6"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_pshaft7"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_seize_0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_seize_1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_seize_2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_seize_3"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_seize_4"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_seize_5"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_seize_6"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_seize_7"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_revers0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_revers1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_revers2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_revers3"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_revers4"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_revers5"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_revers6"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_revers7"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_revdep0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_revdep1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_revdep2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_revdep3"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_revdep4"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_revdep5"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_revdep6"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_revdep7"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_aftbur0"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_aftbur1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_aftbur2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_aftbur3"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_aftbur4"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_aftbur5"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_aftbur6"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_aftbur7"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_wing1L"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_wing1R"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_wing2L"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_wing2R"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_wing3L"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_wing3R"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_wing4L"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_wing4R"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_hstbL"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_hstbR"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_vstb1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_vstb2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_mwing1"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_mwing2"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_mwing3"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_mwing4"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_mwing5"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_mwing6"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_mwing7"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_mwing8"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_pyl1a"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_pyl2a"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_pyl3a"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_pyl4a"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_pyl5a"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_pyl6a"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_pyl7a"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_pyl8a"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_pyl1b"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_pyl2b"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_pyl3b"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_pyl4b"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_pyl5b"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_pyl6b"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_pyl7b"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_pyl8b"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_gen_esys"));
dpMeasured.push_back(DataPoint("sim/operation/failures/rel_gen_avio"));
dpMeasured.push_back(DataPoint("sim/operation/misc/debug_network"));
dpMeasured.push_back(DataPoint("sim/operation/misc/frame_rate_period"));
dpMeasured.push_back(DataPoint("sim/operation/misc/time_ratio"));
dpMeasured.push_back(DataPoint("sim/operation/override/override_joystick"));
dpMeasured.push_back(DataPoint("sim/operation/override/override_artstab"));
dpMeasured.push_back(DataPoint("sim/operation/override/override_flightcontrol"));
dpMeasured.push_back(DataPoint("sim/operation/override/override_gearbrake"));
dpMeasured.push_back(DataPoint("sim/operation/override/override_planepath"));
dpMeasured.push_back(DataPoint("sim/operation/override/override_plane_ai_autopilot"));
dpMeasured.push_back(DataPoint("sim/operation/override/override_navneedles"));
dpMeasured.push_back(DataPoint("sim/operation/override/override_nav1_needles"));
dpMeasured.push_back(DataPoint("sim/operation/override/override_nav2_needles"));
dpMeasured.push_back(DataPoint("sim/operation/override/override_adf"));
dpMeasured.push_back(DataPoint("sim/operation/override/override_dme"));
dpMeasured.push_back(DataPoint("sim/operation/override/override_gps"));
dpMeasured.push_back(DataPoint("sim/operation/override/override_nav_heading"));
dpMeasured.push_back(DataPoint("sim/operation/override/override_flightdir"));
dpMeasured.push_back(DataPoint("sim/operation/override/override_flightdir_ptch"));
dpMeasured.push_back(DataPoint("sim/operation/override/override_flightdir_roll"));
dpMeasured.push_back(DataPoint("sim/operation/override/override_camera"));
dpMeasured.push_back(DataPoint("sim/operation/override/override_annunciators"));
dpMeasured.push_back(DataPoint("sim/operation/override/override_autopilot"));
dpMeasured.push_back(DataPoint("sim/operation/override/override_joystick_heading"));
dpMeasured.push_back(DataPoint("sim/operation/override/override_joystick_pitch"));
dpMeasured.push_back(DataPoint("sim/operation/override/override_joystick_roll"));
dpMeasured.push_back(DataPoint("sim/operation/override/override_throttles"));
dpMeasured.push_back(DataPoint("sim/operation/override/override_prop_pitch"));
dpMeasured.push_back(DataPoint("sim/operation/override/override_mixture"));
dpMeasured.push_back(DataPoint("sim/operation/override/override_groundplane"));
dpMeasured.push_back(DataPoint("sim/operation/override/disable_cockpit_object"));
dpMeasured.push_back(DataPoint("sim/operation/override/disable_twosided_fuselage"));
dpMeasured.push_back(DataPoint("sim/operation/override/override_fms_advance"));
dpMeasured.push_back(DataPoint("sim/operation/override/override_fuel_flow"));
dpMeasured.push_back(DataPoint("sim/operation/override/override_itt_egt"));
dpMeasured.push_back(DataPoint("sim/operation/override/override_control_surfaces"));
dpMeasured.push_back(DataPoint("sim/operation/override/override_engines"));
dpMeasured.push_back(DataPoint("sim/operation/override/override_forces"));
dpMeasured.push_back(DataPoint("sim/operation/prefs/startup_running"));
dpMeasured.push_back(DataPoint("sim/operation/prefs/warn_overspeed"));
dpMeasured.push_back(DataPoint("sim/operation/prefs/warn_overgforce"));
dpMeasured.push_back(DataPoint("sim/operation/prefs/warn_overspeed_flaps"));
dpMeasured.push_back(DataPoint("sim/operation/prefs/warn_overspeed_gear"));
dpMeasured.push_back(DataPoint("sim/operation/prefs/reset_on_crash"));
dpMeasured.push_back(DataPoint("sim/operation/prefs/warn_nonobvious_stuff"));
dpMeasured.push_back(DataPoint("sim/operation/prefs/warn_framerate_low"));
dpMeasured.push_back(DataPoint("sim/operation/prefs/text_out"));
dpMeasured.push_back(DataPoint("sim/operation/prefs/replay_mode"));
dpMeasured.push_back(DataPoint("sim/operation/prefs/ai_flies_aircraft"));
dpMeasured.push_back(DataPoint("sim/operation/prefs/misc/language"));
dpMeasured.push_back(DataPoint("sim/operation/sound/has_sound"));
dpMeasured.push_back(DataPoint("sim/operation/sound/has_speech_synth"));
dpMeasured.push_back(DataPoint("sim/operation/sound/sound_on"));
dpMeasured.push_back(DataPoint("sim/operation/sound/speech_on"));
dpMeasured.push_back(DataPoint("sim/operation/windows/system_window"));
dpMeasured.push_back(DataPoint("sim/test/test_float"));
dpMeasured.push_back(DataPoint("sim/time/timer_is_running_sec"));
dpMeasured.push_back(DataPoint("sim/time/total_running_time_sec"));
dpMeasured.push_back(DataPoint("sim/time/total_flight_time_sec"));
dpMeasured.push_back(DataPoint("sim/time/timer_elapsed_time_sec"));
dpMeasured.push_back(DataPoint("sim/time/local_time_sec"));
dpMeasured.push_back(DataPoint("sim/time/zulu_time_sec"));
dpMeasured.push_back(DataPoint("sim/time/local_date_days"));
dpMeasured.push_back(DataPoint("sim/time/use_system_time"));
dpMeasured.push_back(DataPoint("sim/time/backwards"));
dpMeasured.push_back(DataPoint("sim/time/paused"));
dpMeasured.push_back(DataPoint("sim/time/sim_speed"));
dpMeasured.push_back(DataPoint("sim/time/ground_speed"));
dpMeasured.push_back(DataPoint("sim/time/hobbs_time"));
dpMeasured.push_back(DataPoint("sim/version/sim_build_string"));
dpMeasured.push_back(DataPoint("sim/version/xplm_build_string"));
dpMeasured.push_back(DataPoint("sim/weapons/weapon_count"));
dpMeasured.push_back(DataPoint("sim/weapons/wpn_struct"));
dpMeasured.push_back(DataPoint("sim/weapons/type"));
dpMeasured.push_back(DataPoint("sim/weapons/free_flyer"));
dpMeasured.push_back(DataPoint("sim/weapons/action_mode"));
dpMeasured.push_back(DataPoint("sim/weapons/x_wpn_att"));
dpMeasured.push_back(DataPoint("sim/weapons/y_wpn_att"));
dpMeasured.push_back(DataPoint("sim/weapons/z_wpn_att"));
dpMeasured.push_back(DataPoint("sim/weapons/cgY"));
dpMeasured.push_back(DataPoint("sim/weapons/cgZ"));
dpMeasured.push_back(DataPoint("sim/weapons/las_range"));
dpMeasured.push_back(DataPoint("sim/weapons/conv_range"));
dpMeasured.push_back(DataPoint("sim/weapons/bul_rounds_per_sec"));
dpMeasured.push_back(DataPoint("sim/weapons/bul_rounds"));
dpMeasured.push_back(DataPoint("sim/weapons/bul_muzzle_speed"));
dpMeasured.push_back(DataPoint("sim/weapons/bul_area"));
dpMeasured.push_back(DataPoint("sim/weapons/added_mass"));
dpMeasured.push_back(DataPoint("sim/weapons/total_weapon_mass_max"));
dpMeasured.push_back(DataPoint("sim/weapons/fuel_warhead_mass_max"));
dpMeasured.push_back(DataPoint("sim/weapons/warhead_type"));
dpMeasured.push_back(DataPoint("sim/weapons/mis_drag_co"));
dpMeasured.push_back(DataPoint("sim/weapons/mis_drag_chute_S"));
dpMeasured.push_back(DataPoint("sim/weapons/mis_cone_width"));
dpMeasured.push_back(DataPoint("sim/weapons/mis_crat_per_deg_bore"));
dpMeasured.push_back(DataPoint("sim/weapons/mis_crat_per_degpersec_bore"));
dpMeasured.push_back(DataPoint("sim/weapons/mis_crat_per_degpersec"));
dpMeasured.push_back(DataPoint("sim/weapons/gun_del_psi_deg_max"));
dpMeasured.push_back(DataPoint("sim/weapons/gun_del_the_deg_max"));
dpMeasured.push_back(DataPoint("sim/weapons/s_frn"));
dpMeasured.push_back(DataPoint("sim/weapons/s_sid"));
dpMeasured.push_back(DataPoint("sim/weapons/s_top"));
dpMeasured.push_back(DataPoint("sim/weapons/X_body_aero"));
dpMeasured.push_back(DataPoint("sim/weapons/Y_body_aero"));
dpMeasured.push_back(DataPoint("sim/weapons/Z_body_aero"));
dpMeasured.push_back(DataPoint("sim/weapons/Jxx_unitmass"));
dpMeasured.push_back(DataPoint("sim/weapons/Jyy_unitmass"));
dpMeasured.push_back(DataPoint("sim/weapons/Jzz_unitmass"));
dpMeasured.push_back(DataPoint("sim/weapons/target_index"));
dpMeasured.push_back(DataPoint("sim/weapons/targ_lat"));
dpMeasured.push_back(DataPoint("sim/weapons/targ_lon"));
dpMeasured.push_back(DataPoint("sim/weapons/targ_h"));
dpMeasured.push_back(DataPoint("sim/weapons/del_psi"));
dpMeasured.push_back(DataPoint("sim/weapons/del_the"));
dpMeasured.push_back(DataPoint("sim/weapons/rudd_rat"));
dpMeasured.push_back(DataPoint("sim/weapons/elev_rat"));
dpMeasured.push_back(DataPoint("sim/weapons/V_msc"));
dpMeasured.push_back(DataPoint("sim/weapons/AV_msc"));
dpMeasured.push_back(DataPoint("sim/weapons/dist_targ"));
dpMeasured.push_back(DataPoint("sim/weapons/dist_point"));
dpMeasured.push_back(DataPoint("sim/weapons/time_point"));
dpMeasured.push_back(DataPoint("sim/weapons/fx_axis"));
dpMeasured.push_back(DataPoint("sim/weapons/fy_axis"));
dpMeasured.push_back(DataPoint("sim/weapons/fz_axis"));
dpMeasured.push_back(DataPoint("sim/weapons/vx"));
dpMeasured.push_back(DataPoint("sim/weapons/vy"));
dpMeasured.push_back(DataPoint("sim/weapons/vz"));
dpMeasured.push_back(DataPoint("sim/weapons/x"));
dpMeasured.push_back(DataPoint("sim/weapons/y"));
dpMeasured.push_back(DataPoint("sim/weapons/z"));
dpMeasured.push_back(DataPoint("sim/weapons/L"));
dpMeasured.push_back(DataPoint("sim/weapons/M"));
dpMeasured.push_back(DataPoint("sim/weapons/N"));
dpMeasured.push_back(DataPoint("sim/weapons/Prad"));
dpMeasured.push_back(DataPoint("sim/weapons/Qrad"));
dpMeasured.push_back(DataPoint("sim/weapons/Rrad"));
dpMeasured.push_back(DataPoint("sim/weapons/the"));
dpMeasured.push_back(DataPoint("sim/weapons/psi"));
dpMeasured.push_back(DataPoint("sim/weapons/phi"));
dpMeasured.push_back(DataPoint("sim/weapons/next_bull_time"));
dpMeasured.push_back(DataPoint("sim/weapons/total_weapon_mass_now"));
dpMeasured.push_back(DataPoint("sim/weapons/fuel_warhead_mass_now"));
dpMeasured.push_back(DataPoint("sim/weapons/mis_thrust1"));
dpMeasured.push_back(DataPoint("sim/weapons/mis_thrust2"));
dpMeasured.push_back(DataPoint("sim/weapons/mis_thrust3"));
dpMeasured.push_back(DataPoint("sim/weapons/mis_duration1"));
dpMeasured.push_back(DataPoint("sim/weapons/mis_duration2"));
dpMeasured.push_back(DataPoint("sim/weapons/mis_duration3"));
dpMeasured.push_back(DataPoint("sim/weapons/q1"));
dpMeasured.push_back(DataPoint("sim/weapons/q2"));
dpMeasured.push_back(DataPoint("sim/weapons/q3"));
dpMeasured.push_back(DataPoint("sim/weapons/q4"));
dpMeasured.push_back(DataPoint("sim/weather/cloud_type[0]"));
dpMeasured.push_back(DataPoint("sim/weather/cloud_type[1]"));
dpMeasured.push_back(DataPoint("sim/weather/cloud_type[2]"));
dpMeasured.push_back(DataPoint("sim/weather/cloud_base_msl_m[0]"));
dpMeasured.push_back(DataPoint("sim/weather/cloud_base_msl_m[1]"));
dpMeasured.push_back(DataPoint("sim/weather/cloud_base_msl_m[2]"));
dpMeasured.push_back(DataPoint("sim/weather/cloud_tops_msl_m[0]"));
dpMeasured.push_back(DataPoint("sim/weather/cloud_tops_msl_m[1]"));
dpMeasured.push_back(DataPoint("sim/weather/cloud_tops_msl_m[2]"));
dpMeasured.push_back(DataPoint("sim/weather/visibility_reported_m"));
dpMeasured.push_back(DataPoint("sim/weather/rain_percent"));
dpMeasured.push_back(DataPoint("sim/weather/thunderstorm_percent"));
dpMeasured.push_back(DataPoint("sim/weather/wind_turbulence_percent"));
dpMeasured.push_back(DataPoint("sim/weather/barometer_sealevel_inhg"));
dpMeasured.push_back(DataPoint("sim/weather/has_real_weather_bool"));
dpMeasured.push_back(DataPoint("sim/weather/use_real_weather_bool"));
dpMeasured.push_back(DataPoint("sim/weather/sigma"));
dpMeasured.push_back(DataPoint("sim/weather/rho"));
dpMeasured.push_back(DataPoint("sim/weather/barometer_current_inhg"));
dpMeasured.push_back(DataPoint("sim/weather/gravity_mss"));
dpMeasured.push_back(DataPoint("sim/weather/speed_sound_ms"));
dpMeasured.push_back(DataPoint("sim/weather/wind_altitude_msl_m[0]"));
dpMeasured.push_back(DataPoint("sim/weather/wind_altitude_msl_m[1]"));
dpMeasured.push_back(DataPoint("sim/weather/wind_altitude_msl_m[2]"));
dpMeasured.push_back(DataPoint("sim/weather/wind_direction_degt[0]"));
dpMeasured.push_back(DataPoint("sim/weather/wind_direction_degt[1]"));
dpMeasured.push_back(DataPoint("sim/weather/wind_direction_degt[2]"));
dpMeasured.push_back(DataPoint("sim/weather/wind_speed_kt[0]"));
dpMeasured.push_back(DataPoint("sim/weather/wind_speed_kt[1]"));
dpMeasured.push_back(DataPoint("sim/weather/wind_speed_kt[2]"));
dpMeasured.push_back(DataPoint("sim/weather/shear_direction_degt[0]"));
dpMeasured.push_back(DataPoint("sim/weather/shear_direction_degt[1]"));
dpMeasured.push_back(DataPoint("sim/weather/shear_direction_degt[2]"));
dpMeasured.push_back(DataPoint("sim/weather/shear_speed_kt[0]"));
dpMeasured.push_back(DataPoint("sim/weather/shear_speed_kt[1]"));
dpMeasured.push_back(DataPoint("sim/weather/shear_speed_kt[2]"));
dpMeasured.push_back(DataPoint("sim/weather/turbulence[0]"));
dpMeasured.push_back(DataPoint("sim/weather/turbulence[1]"));
dpMeasured.push_back(DataPoint("sim/weather/turbulence[2]"));
dpMeasured.push_back(DataPoint("sim/weather/wave_amplitude"));
dpMeasured.push_back(DataPoint("sim/weather/wave_length"));
dpMeasured.push_back(DataPoint("sim/weather/wave_speed"));
dpMeasured.push_back(DataPoint("sim/weather/wave_dir"));
dpMeasured.push_back(DataPoint("sim/weather/temperature_sealevel_c"));
dpMeasured.push_back(DataPoint("sim/weather/dewpoi_sealevel_c"));
dpMeasured.push_back(DataPoint("sim/weather/temperature_ambient_c"));
dpMeasured.push_back(DataPoint("sim/weather/temperature_le_c"));
dpMeasured.push_back(DataPoint("sim/weather/thermal_percent"));
dpMeasured.push_back(DataPoint("sim/weather/thermal_rate_ms"));
dpMeasured.push_back(DataPoint("sim/weather/thermal_altitude_msl_m"));
dpMeasured.push_back(DataPoint("sim/weather/runway_friction"));
dpMeasured.push_back(DataPoint("sim/weather/wind_direction_degt"));
dpMeasured.push_back(DataPoint("sim/weather/wind_speed_kt"));
dpMeasured.push_back(DataPoint("sim/weather/wind_now_x_msc"));
dpMeasured.push_back(DataPoint("sim/weather/wind_now_y_msc"));
dpMeasured.push_back(DataPoint("sim/weather/wind_now_z_msc"));
dpMeasured.push_back(DataPoint("sim/weather/precipitation_on_aircraft_ratio"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/master_caution"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/master_warning"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/master_accept"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/autopilot_disconnect"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/low_vacuum"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/low_voltage"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/fuel_quantity"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/hydraulic_pressure"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/speedbrake"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/GPWS"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/ice"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/low_rotor"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/high_rotor"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/pitot_heat"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/transonic"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/slats"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/flight_director"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/autopilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/yaw_damper"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/fuel_pressure_low"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/oil_pressure_low"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/oil_temperature_high"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/generator_off"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/chip_detected"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/engine_fires"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/igniter_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/reverser_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/burner_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/inverter_off"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/N1_low"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/N1_high"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/reverser_not_ready"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/ice_vane_extend"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/ice_vane_fail"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/bleed_air_off"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/bleed_air_fail"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/auto_feather_arm"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/fuel_transfer"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/hvac"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/battery_charge_hi"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/cabin_altitude_12500"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/autopilot_trim_fail"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/electric_trim_off"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/crossfeed_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/landing_taxi_lite"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/cabin_door_open"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/external_power_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/passenger_oxy_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/gear_unsafe"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/autopilot_trim_down"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/autopilot_trim_up"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/autopilot_bank_limit"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/autopilot_soft_ride"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/no_inverters"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/fuel_pressure"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/oil_pressure"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/oil_temperature"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/generator"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/chip_detect"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/engine_fire"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/reverser_deployed"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/afterburner"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/inverter"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/stall_warning"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/gear_warning"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/no_smoking"));
dpMeasured.push_back(DataPoint("sim/cockpit2/annunciators/fasten_seatbelt"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/autopilot_source"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/autothrottle_enabled"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/autothrottle_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/heading_mode"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/altitude_mode"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/bank_angle_mode"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/flight_director_mode"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/autopilot_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/servos_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/airspeed_is_mach"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/alt_vvi_is_showing_vvi"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/vnav_armed"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/altitude_hold_armed"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/hnav_armed"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/glideslope_armed"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/backcourse_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/airspeed_dial_kts_mach"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/heading_dial_deg_mag_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/heading_dial_deg_mag_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/vvi_dial_fpm"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/altitude_dial_ft"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/altitude_hold_ft"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/altitude_vnav_ft"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/sync_hold_pitch_deg"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/sync_hold_roll_deg"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/flight_director_pitch_deg"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/flight_director_roll_deg"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/roll_status"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/heading_status"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/nav_status"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/backcourse_status"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/TOGA_lateral_status"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/pitch_status"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/vvi_status"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/speed_status"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/altitude_hold_status"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/glideslope_status"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/vnav_status"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/TOGA_status"));
dpMeasured.push_back(DataPoint("sim/cockpit2/autopilot/approach_status"));
dpMeasured.push_back(DataPoint("sim/cockpit2/camera/camera_offset_pitch"));
dpMeasured.push_back(DataPoint("sim/cockpit2/camera/camera_offset_heading"));
dpMeasured.push_back(DataPoint("sim/cockpit2/camera/camera_offset_roll"));
dpMeasured.push_back(DataPoint("sim/cockpit2/camera/camera_field_of_view"));
dpMeasured.push_back(DataPoint("sim/cockpit2/clock_timer/elapsed_time_hours"));
dpMeasured.push_back(DataPoint("sim/cockpit2/clock_timer/elapsed_time_minutes"));
dpMeasured.push_back(DataPoint("sim/cockpit2/clock_timer/elapsed_time_seconds"));
dpMeasured.push_back(DataPoint("sim/cockpit2/clock_timer/zulu_time_hours"));
dpMeasured.push_back(DataPoint("sim/cockpit2/clock_timer/zulu_time_minutes"));
dpMeasured.push_back(DataPoint("sim/cockpit2/clock_timer/zulu_time_seconds"));
dpMeasured.push_back(DataPoint("sim/cockpit2/clock_timer/local_time_hours"));
dpMeasured.push_back(DataPoint("sim/cockpit2/clock_timer/local_time_minutes"));
dpMeasured.push_back(DataPoint("sim/cockpit2/clock_timer/local_time_seconds"));
dpMeasured.push_back(DataPoint("sim/cockpit2/clock_timer/hobbs_time_hours"));
dpMeasured.push_back(DataPoint("sim/cockpit2/clock_timer/hobbs_time_minutes"));
dpMeasured.push_back(DataPoint("sim/cockpit2/clock_timer/hobbs_time_seconds"));
dpMeasured.push_back(DataPoint("sim/cockpit2/clock_timer/timer_running"));
dpMeasured.push_back(DataPoint("sim/cockpit2/clock_timer/timer_is_GMT"));
dpMeasured.push_back(DataPoint("sim/cockpit2/clock_timer/date_is_showing"));
dpMeasured.push_back(DataPoint("sim/cockpit2/clock_timer/current_day"));
dpMeasured.push_back(DataPoint("sim/cockpit2/clock_timer/current_month"));
dpMeasured.push_back(DataPoint("sim/cockpit2/clock_timer/timer_mode"));
dpMeasured.push_back(DataPoint("sim/cockpit2/controls/yoke_pitch_ratio"));
dpMeasured.push_back(DataPoint("sim/cockpit2/controls/yoke_roll_ratio"));
dpMeasured.push_back(DataPoint("sim/cockpit2/controls/yoke_heading_ratio"));
dpMeasured.push_back(DataPoint("sim/cockpit2/controls/speedbrake_ratio"));
dpMeasured.push_back(DataPoint("sim/cockpit2/controls/wingsweep_ratio"));
dpMeasured.push_back(DataPoint("sim/cockpit2/controls/thrust_vector_ratio"));
dpMeasured.push_back(DataPoint("sim/cockpit2/controls/dihedral_ratio"));
dpMeasured.push_back(DataPoint("sim/cockpit2/controls/incidence_ratio"));
dpMeasured.push_back(DataPoint("sim/cockpit2/controls/wing_retraction_ratio"));
dpMeasured.push_back(DataPoint("sim/cockpit2/controls/flap_ratio"));
dpMeasured.push_back(DataPoint("sim/cockpit2/controls/parking_brake_ratio"));
dpMeasured.push_back(DataPoint("sim/cockpit2/controls/left_brake_ratio"));
dpMeasured.push_back(DataPoint("sim/cockpit2/controls/right_brake_ratio"));
dpMeasured.push_back(DataPoint("sim/cockpit2/controls/gear_handle_down"));
dpMeasured.push_back(DataPoint("sim/cockpit2/controls/nosewheel_steer_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/controls/tailwheel_lock_ratio"));
dpMeasured.push_back(DataPoint("sim/cockpit2/controls/aileron_trim"));
dpMeasured.push_back(DataPoint("sim/cockpit2/controls/elevator_trim"));
dpMeasured.push_back(DataPoint("sim/cockpit2/controls/rudder_trim"));
dpMeasured.push_back(DataPoint("sim/cockpit2/controls/rotor_trim"));
dpMeasured.push_back(DataPoint("sim/cockpit2/controls/water_rudder_handle_ratio"));
dpMeasured.push_back(DataPoint("sim/cockpit2/controls/flap_handle_deploy_ratio"));
dpMeasured.push_back(DataPoint("sim/cockpit2/EFIS/map_mode"));
dpMeasured.push_back(DataPoint("sim/cockpit2/EFIS/map_mode_is_HSI"));
dpMeasured.push_back(DataPoint("sim/cockpit2/EFIS/map_range"));
dpMeasured.push_back(DataPoint("sim/cockpit2/EFIS/argus_mode"));
dpMeasured.push_back(DataPoint("sim/cockpit2/EFIS/ecam_mode"));
dpMeasured.push_back(DataPoint("sim/cockpit2/EFIS/EFIS_weather_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/EFIS/EFIS_tcas_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/EFIS/EFIS_airport_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/EFIS/EFIS_fix_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/EFIS/EFIS_vor_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/EFIS/EFIS_ndb_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/EFIS/EFIS_1_selection_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/EFIS/EFIS_1_selection_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/EFIS/EFIS_2_selection_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/EFIS/EFIS_2_selection_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/EFIS/EFIS_page"));
dpMeasured.push_back(DataPoint("sim/cockpit2/electrical/inverter_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/electrical/battery_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/electrical/battery_amps"));
dpMeasured.push_back(DataPoint("sim/cockpit2/electrical/battery_voltage_actual_volts"));
dpMeasured.push_back(DataPoint("sim/cockpit2/electrical/battery_voltage_indicated_volts"));
dpMeasured.push_back(DataPoint("sim/cockpit2/electrical/generator_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/electrical/generator_amps"));
dpMeasured.push_back(DataPoint("sim/cockpit2/electrical/APU_generator_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/electrical/APU_generator_amps"));
dpMeasured.push_back(DataPoint("sim/cockpit2/electrical/APU_starter_switch"));
dpMeasured.push_back(DataPoint("sim/cockpit2/electrical/APU_N1_percent"));
dpMeasured.push_back(DataPoint("sim/cockpit2/electrical/APU_running"));
dpMeasured.push_back(DataPoint("sim/cockpit2/electrical/cross_tie"));
dpMeasured.push_back(DataPoint("sim/cockpit2/electrical/dc_voltmeter_selection"));
dpMeasured.push_back(DataPoint("sim/cockpit2/electrical/dc_voltmeter_value"));
dpMeasured.push_back(DataPoint("sim/cockpit2/electrical/bus_volts"));
dpMeasured.push_back(DataPoint("sim/cockpit2/electrical/bus_load_amps"));
dpMeasured.push_back(DataPoint("sim/cockpit2/electrical/panel_brightness_ratio"));
dpMeasured.push_back(DataPoint("sim/cockpit2/electrical/panel_brightness_ratio_auto"));
dpMeasured.push_back(DataPoint("sim/cockpit2/electrical/panel_brightness_ratio_manual"));
dpMeasured.push_back(DataPoint("sim/cockpit2/electrical/instrument_brightness_ratio"));
dpMeasured.push_back(DataPoint("sim/cockpit2/electrical/instrument_brightness_ratio_auto"));
dpMeasured.push_back(DataPoint("sim/cockpit2/electrical/instrument_brightness_ratio_manual"));
dpMeasured.push_back(DataPoint("sim/cockpit2/electrical/HUD_brightness_ratio"));
dpMeasured.push_back(DataPoint("sim/cockpit2/electrical/HUD_brightness_ratio_auto"));
dpMeasured.push_back(DataPoint("sim/cockpit2/electrical/HUD_brightness_ratio_manual"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/actuators/cyclic_elevator_deg"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/actuators/cyclic_aileron_deg"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/actuators/throttle_ratio"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/actuators/throttle_ratio_all"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/actuators/prop_rotation_speed_rad_sec"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/actuators/prop_rotation_speed_rad_sec_all"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/actuators/prop_angle_degrees"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/actuators/prop_angle_degrees_all"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/actuators/mixture_ratio"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/actuators/mixture_ratio_all"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/actuators/carb_heat_ratio"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/actuators/cowl_flap_ratio"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/actuators/primer_ratio"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/actuators/afterburner_enabled"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/actuators/igniter_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/actuators/auto_ignite_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/actuators/ignition_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/actuators/ignition_key"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/actuators/fadec_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/actuators/primer_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/actuators/fuel_pump_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/actuators/idle_speed"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/actuators/prop_mode"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/actuators/prop_pitch_deg"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/actuators/governor_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/actuators/fire_extinguisher_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/actuators/clutch_engage"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/actuators/clutch_ratio"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/indicators/N1_percent"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/indicators/N2_percent"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/indicators/MPR_in_hg"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/indicators/EPR_ratio"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/indicators/torque_n_mtr"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/indicators/fuel_flow_kg_sec"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/indicators/ITT_deg_C"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/indicators/EGT_deg_C"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/indicators/CHT_deg_C"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/indicators/fuel_pressure_psi"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/indicators/oil_pressure_psi"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/indicators/oil_temperature_deg_C"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/indicators/oil_quantity_ratio"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/indicators/power_watts"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/indicators/thrust_n"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/indicators/engine_speed_rpm"));
dpMeasured.push_back(DataPoint("sim/cockpit2/engine/indicators/prop_speed_rpm"));
dpMeasured.push_back(DataPoint("sim/cockpit2/fuel/fuel_tank_selector_left"));
dpMeasured.push_back(DataPoint("sim/cockpit2/fuel/fuel_tank_selector_right"));
dpMeasured.push_back(DataPoint("sim/cockpit2/fuel/fuel_tank_selector"));
dpMeasured.push_back(DataPoint("sim/cockpit2/fuel/fuel_tank_transfer_to"));
dpMeasured.push_back(DataPoint("sim/cockpit2/fuel/fuel_tank_transfer_from"));
dpMeasured.push_back(DataPoint("sim/cockpit2/fuel/fuel_tank_pump_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/fuel/showing_aux"));
dpMeasured.push_back(DataPoint("sim/cockpit2/fuel/fuel_quantity"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/actuators/barometer_setting_in_hg_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/actuators/barometer_setting_in_hg_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/actuators/radio_altimeter_bug_ft_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/actuators/radio_altimeter_bug_ft_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/actuators/artificial_horizon_adjust_deg_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/actuators/artificial_horizon_adjust_deg_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/actuators/airspeed_bug_deg"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/slip_deg"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/compass_heading_deg_mag"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/airspeed_acceleration_kts_sec_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/airspeed_acceleration_kts_sec_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/airspeed_kts_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/airspeed_kts_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/altitude_ft_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/altitude_ft_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/vvi_fpm_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/vvi_fpm_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/turn_rate_roll_deg_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/turn_rate_roll_deg_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/turn_rate_heading_deg_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/turn_rate_heading_deg_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/heading_AHARS_deg_mag_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/heading_AHARS_deg_mag_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/heading_electric_deg_mag_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/heading_electric_deg_mag_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/heading_vacuum_deg_mag_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/heading_vacuum_deg_mag_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/pitch_AHARS_deg_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/pitch_AHARS_deg_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/pitch_electric_deg_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/pitch_electric_deg_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/pitch_vacuum_deg_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/pitch_vacuum_deg_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/radio_altimeter_height_ft_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/radio_altimeter_height_ft_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/radio_altimeter_dh_lit_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/radio_altimeter_dh_lit_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/roll_AHARS_deg_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/roll_AHARS_deg_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/roll_electric_deg_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/roll_electric_deg_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/roll_vacuum_deg_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/roll_vacuum_deg_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/wind_heading_deg_mag"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/wind_speed_kts"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/suction_1_ratio"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/suction_2_ratio"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/total_energy_fpm"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/water_ratio"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/sideslip_degrees"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/prop_sync_degrees"));
dpMeasured.push_back(DataPoint("sim/cockpit2/gauges/indicators/CG_indicator"));
dpMeasured.push_back(DataPoint("sim/cockpit2/hydraulics/indicators/hydraulic_pressure_1"));
dpMeasured.push_back(DataPoint("sim/cockpit2/hydraulics/indicators/hydraulic_pressure_2"));
dpMeasured.push_back(DataPoint("sim/cockpit2/hydraulics/indicators/hydraulic_fluid_ratio_1"));
dpMeasured.push_back(DataPoint("sim/cockpit2/hydraulics/indicators/hydraulic_fluid_ratio_2"));
dpMeasured.push_back(DataPoint("sim/cockpit2/ice/ice_all_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/ice/ice_inlet_heat_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/ice/ice_prop_heat_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/ice/ice_window_heat_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/ice/ice_pitot_heat_on_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/ice/ice_pitot_heat_on_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/ice/ice_AOA_heat_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/ice/ice_surfce_heat_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/ice/ice_surfce_heat_left_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/ice/ice_surfce_heat_right_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/ice/ice_surface_boot_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/ice/anti_ice_engine_air"));
dpMeasured.push_back(DataPoint("sim/cockpit2/ice/anti_ice_engine_air_b"));
dpMeasured.push_back(DataPoint("sim/cockpit2/ice/ice_auto_ignite_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/ice/ice_detect_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/pressurization/actuators/bleed_air_mode"));
dpMeasured.push_back(DataPoint("sim/cockpit2/pressurization/actuators/dump_all_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/pressurization/actuators/dump_to_altitude_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/pressurization/actuators/cabin_altitude_ft"));
dpMeasured.push_back(DataPoint("sim/cockpit2/pressurization/actuators/cabin_vvi_fpm"));
dpMeasured.push_back(DataPoint("sim/cockpit2/pressurization/actuators/max_allowable_altitude_ft"));
dpMeasured.push_back(DataPoint("sim/cockpit2/pressurization/indicators/cabin_altitude_ft"));
dpMeasured.push_back(DataPoint("sim/cockpit2/pressurization/indicators/cabin_vvi_fpm"));
dpMeasured.push_back(DataPoint("sim/cockpit2/pressurization/indicators/pressure_diffential_psi"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/nav1_power"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/nav2_power"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/com1_power"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/com2_power"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/adf1_power"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/adf2_power"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/gps_power"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/dme_power"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/nav1_frequency_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/nav2_frequency_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/com1_frequency_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/com2_frequency_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/adf1_frequency_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/adf2_frequency_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/dme_frequency_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/nav1_standby_frequency_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/nav2_standby_frequency_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/com1_standby_frequency_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/com2_standby_frequency_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/adf1_standby_frequency_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/adf2_standby_frequency_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/dme_standby_frequency_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/nav1_obs_deg_mag_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/nav2_obs_deg_mag_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/nav1_obs_deg_mag_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/nav2_obs_deg_mag_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/adf1_card_heading_deg_mag_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/adf2_card_heading_deg_mag_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/adf1_card_heading_deg_mag_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/adf2_card_heading_deg_mag_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/nav1_course_deg_mag_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/nav2_course_deg_mag_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/nav1_course_deg_mag_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/nav2_course_deg_mag_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/HSI_source_select_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/HSI_source_select_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/RMI_source_select_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/RMI_source_select_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/RMI_left_use_adf_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/RMI_left_use_adf_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/RMI_right_use_adf_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/RMI_right_use_adf_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/DME_mode"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/DME_slave_source"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/nav_com_adf_mode"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/transponder_code"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/audio_com_selection"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/audio_nav_selection"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/audio_selection_com1"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/audio_selection_com2"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/audio_selection_nav1"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/audio_selection_nav2"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/audio_selection_adf1"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/audio_selection_adf2"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/audio_dme_enabled"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/audio_marker_enabled"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/hsi_obs_deg_mag_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/hsi_obs_deg_mag_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/nav1_left_frequency_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/nav2_left_frequency_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/com1_left_frequency_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/com2_left_frequency_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/adf1_left_frequency_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/adf2_left_frequency_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/dme_left_frequency_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/nav1_right_frequency_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/nav2_right_frequency_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/com1_right_frequency_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/com2_right_frequency_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/adf1_right_frequency_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/adf2_right_frequency_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/dme_right_frequency_hz"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/nav1_right_is_selected"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/nav2_right_is_selected"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/com1_right_is_selected"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/com2_right_is_selected"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/adf1_right_is_selected"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/adf2_right_is_selected"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/actuators/dme_right_is_selected"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/nav1_bearing_deg_mag"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/nav2_bearing_deg_mag"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/adf1_bearing_deg_mag"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/adf2_bearing_deg_mag"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/gps_bearing_deg_mag"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/nav1_relative_bearing_deg"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/nav2_relative_bearing_deg"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/adf1_relative_bearing_deg"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/adf2_relative_bearing_deg"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/gps_relative_bearing_deg"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/nav1_flag_from_to_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/nav2_flag_from_to_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/nav1_flag_from_to_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/nav2_flag_from_to_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/nav1_flag_glideslope"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/nav2_flag_glideslope"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/nav1_display_horizontal"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/nav2_display_horizontal"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/nav1_display_vertical"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/nav2_display_vertical"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/nav1_hdef_dots_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/nav2_hdef_dots_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/gps_hdef_dots_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/nav1_hdef_dots_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/nav2_hdef_dots_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/gps_hdef_dots_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/nav1_vdef_dots_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/nav2_vdef_dots_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/nav1_vdef_dots_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/nav2_vdef_dots_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/nav1_has_dme"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/nav2_has_dme"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/adf1_has_dme"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/adf2_has_dme"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/gps_has_dme"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/dme_has_dme"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/nav1_dme_distance_nm"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/nav2_dme_distance_nm"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/adf1_dme_distance_nm"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/adf2_dme_distance_nm"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/gps_dme_distance_nm"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/dme_dme_distance_nm"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/nav1_dme_speed_kts"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/nav2_dme_speed_kts"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/adf1_dme_speed_kts"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/adf2_dme_speed_kts"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/gps_dme_speed_kts"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/dme_dme_speed_kts"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/nav1_dme_time_min"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/nav2_dme_time_min"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/adf1_dme_time_min"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/adf2_dme_time_min"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/gps_dme_time_min"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/dme_dme_time_min"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/nav1_nav_id"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/nav2_nav_id"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/adf1_nav_id"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/adf2_nav_id"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/gps_nav_id"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/dme_nav_id"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/over_outer_marker"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/over_middle_marker"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/over_inner_marker"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/outer_marker_lit"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/middle_marker_lit"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/inner_marker_lit"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/hsi_bearing_deg_mag_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/hsi_bearing_deg_mag_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/hsi_relative_bearing_deg_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/hsi_relative_bearing_deg_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/hsi_flag_from_to_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/hsi_flag_from_to_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/hsi_hdef_dots_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/hsi_hdef_dots_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/hsi_vdef_dots_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/hsi_vdef_dots_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/hsi_has_dme_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/hsi_has_dme_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/hsi_dme_distance_nm_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/hsi_dme_distance_nm_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/hsi_dme_speed_kts_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/hsi_dme_speed_kts_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/hsi_dme_time_min_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/hsi_dme_time_min_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/hsi_flag_glideslope_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/hsi_flag_glideslope_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/hsi_display_horizontal_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/hsi_display_horizontal_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/hsi_display_vertical_pilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/radios/indicators/hsi_display_vertical_copilot"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/avionics_power_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/navigation_lights_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/beacon_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/strobe_lights_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/landing_lights_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/landing_lights_switch"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/generic_lights_switch"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/taxi_light_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/spot_light_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/dump_fuel"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/puffers_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/prop_sync_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/jet_sync_mode"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/electric_hydraulic_pump_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/ram_air_turbine_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/yaw_damper_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/artificial_stability_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/artificial_stability_pitch_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/artificial_stability_roll_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/HUD_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/parachute_deploy"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/jato_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/tailhook_deploy"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/canopy_open"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/water_scoop_deploy"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/dump_water"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/no_smoking"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/fasten_seat_belts"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/total_energy_audio"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/HSI_is_arc"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/auto_brake_level"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/auto_reverse_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/prop_feather_mode"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/pre_rotate_level"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/clutch_engage"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/rotor_brake"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/clutch_ratio"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/rocket_mode"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/burner_level"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/alternate_static_air_ratio"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/wiper_speed"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/custom_slider_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/panel_brightness_ratio"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/instrument_brightness_ratio"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/HUD_brightness_ratio"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/camera_power_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/switches/total_energy_audio_on"));
dpMeasured.push_back(DataPoint("sim/cockpit2/tcas/indicators/relative_bearing_degs"));
dpMeasured.push_back(DataPoint("sim/cockpit2/tcas/indicators/relative_distance_mtrs"));
dpMeasured.push_back(DataPoint("sim/cockpit2/tcas/indicators/relative_altitude_mtrs"));
dpMeasured.push_back(DataPoint("sim/cockpit2/temperature/outside_air_temp_deg"));
dpMeasured.push_back(DataPoint("sim/cockpit2/temperature/outside_air_temp_degc"));
dpMeasured.push_back(DataPoint("sim/cockpit2/temperature/outside_air_temp_degf"));
dpMeasured.push_back(DataPoint("sim/cockpit2/temperature/outside_air_LE_temp_deg"));
dpMeasured.push_back(DataPoint("sim/cockpit2/temperature/outside_air_LE_temp_degc"));
dpMeasured.push_back(DataPoint("sim/cockpit2/temperature/outside_air_LE_temp_degf"));
dpMeasured.push_back(DataPoint("sim/cockpit2/temperature/outside_air_temp_is_metric"));
dpMeasured.push_back(DataPoint("sim/cockpit2/transmissions/indicators/oil_temperature"));
dpMeasured.push_back(DataPoint("sim/cockpit2/transmissions/indicators/oil_pressure"));
dpMeasured.push_back(DataPoint("sim/cockpit2/weapons/weapon_select_console_index"));
dpMeasured.push_back(DataPoint("sim/cockpit2/weapons/fire_mode"));
dpMeasured.push_back(DataPoint("sim/cockpit2/weapons/fire_rate"));
dpMeasured.push_back(DataPoint("sim/cockpit2/weapons/weapon_selected"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/controls/pitch_ratio"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/controls/roll_ratio"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/controls/heading_ratio"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/controls/speedbrake_ratio"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/controls/wingsweep_ratio"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/controls/thrust_vector_ratio"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/controls/dihedral_ratio"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/controls/incidence_ratio"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/controls/wing_retraction_ratio"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/controls/flap_handle_deploy_ratio"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/controls/slat1_deploy_ratio"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/controls/slat2_deploy_ratio"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/controls/flap1_deploy_ratio"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/controls/flap2_deploy_ratio"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/controls/stabilizer_deflection_degrees"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/controls/aileron_trim"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/controls/elevator_trim"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/controls/rudder_trim"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/controls/rotor_trim"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/controls/water_rudder_deploy_ratio"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/doors/type"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/doors/location_x_mtr"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/doors/location_y_mtr"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/doors/location_z_mtr"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/doors/axis_rotation_deg"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/doors/angle_now_deg"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/location_x_mtr"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/location_y_mtr"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/location_z_mtr"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/throttle_used_ratio"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/has_fuel_flow_before_mixture"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/has_fuel_flow_after_mixture"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/engine_is_burning_fuel"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/afterburner_on"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/afterburner_ratio"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/engine_rotation_speed_rad_sec"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/engine_rotation_angle_deg"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/prop_rotation_speed_rad_sec"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/prop_rotation_angle_deg"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/prop_pitch_deg"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/prop_cone_angle_rad"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/rotor_vertical_vector_deg"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/rotor_vertical_cyclic_deg"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/rotor_side_cyclic_deg"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/rotor_cyclic_elevator_tilt_deg"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/rotor_cyclic_aileron_tilt_deg"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/nacelle_vertical_angle_deg"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/thrust_reverser_deploy_ratio"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/prop_is_disc"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/prop_tip_deflection_degrees"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/prop_disc/override"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/prop_disc/disc_width"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/prop_disc/disc_s"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/prop_disc/disc_t"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/prop_disc/disc_s_dim"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/prop_disc/disc_t_dim"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/prop_disc/disc_alpha_front"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/prop_disc/disc_alpha_side"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/prop_disc/disc_alpha_inside"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/prop_disc/side_width"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/prop_disc/side_length_ratio"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/prop_disc/side_angle"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/prop_disc/side_number_of_blades"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/prop_disc/side_is_billboard"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/prop_disc/side_s"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/prop_disc/side_t"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/prop_disc/side_s_dim"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/prop_disc/side_t_dim"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/prop_disc/side_alpha_front"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/prop_disc/side_alpha_side"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/prop_disc/side_alpha_inside"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/engines/prop_disc/side_alpha_to_camera"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/gear/gear_heading_deg"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/gear/gear_pitch_deg"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/gear/gear_roll_deg"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/gear/tire_steer_command_deg"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/gear/tire_steer_actual_deg"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/gear/tire_vertical_deflection_mtr"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/gear/tire_vertical_force_n_mtr"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/gear/tire_rotation_speed_rad_sec"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/gear/tire_rotation_angle_deg"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/gear/deploy_ratio"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/lights/landing_lights_brightness_ratio"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/lights/generic_lights_brightness_ratio"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/lights/taxi_lights_brightness_ratio"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/lights/spot_lights_brightness_ratio"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/lights/nav_lights_brightness_ratio"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/lights/beacon_brightness_ratio"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/lights/strobe_brightness_ratio"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/lights/strobe_flash_now"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/lights/override_beacons_and_strobes"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/misc/canopy_open_ratio"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/misc/tailhook_deploy_ratio"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/misc/water_scoop_deploy_ratio"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/misc/water_drop_deploy_ratio"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/misc/wiper_angle_deg"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/misc/custom_slider_ratio"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/misc/pressure_outflow_ratio"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/misc/AoA_angle_degrees"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/misc/yaw_string_angle"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/misc/yaw_string_airspeed"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/misc/gforce_normal"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/misc/gforce_axil"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/misc/gforce_side"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/misc/bouncer_x"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/misc/bouncer_y"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/misc/bouncer_z"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/misc/bouncer_vx"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/misc/bouncer_vy"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/misc/bouncer_vz"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/wing/aileron1_deg"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/wing/aileron2_deg"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/wing/spoiler1_deg"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/wing/spoiler2_deg"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/wing/yawbrake_deg"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/wing/elevator1_deg"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/wing/elevator2_deg"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/wing/rudder1_deg"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/wing/rudder2_deg"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/wing/flap1_deg"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/wing/flap2_deg"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/wing/speedbrake1_deg"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/wing/speedbrake2_deg"));
dpMeasured.push_back(DataPoint("sim/flightmodel2/wing/wing_tip_deflection_deg"));
*/
	
}

// converts strings to datapoints
void covertToData()
{
	for(int ii =0; ii< datarefsThatGetResetPerRun.size(); ii++)
	{
		dpPerRun.push_back(DataPoint( datarefsThatGetResetPerRun[ii]));
	}

	for(int ii =0; ii< datarefsThatGetResetPerRecord.size(); ii++)
	{
		dpPerRecord.push_back(DataPoint( datarefsThatGetResetPerRecord[ii]));
	}
	for(int ii =0; ii< datarefsThatGetResetPerRecord.size(); ii++)
	{
		dpPerRecord.push_back(DataPoint( datarefsThatGetResetPerRecord[ii]));
	}
	for(int ii =0; ii< datarefsThatGetResetPerStep.size(); ii++)
	{
		dpPerStep.push_back(DataPoint( datarefsThatGetResetPerStep[ii]));
	}
	
	makeDataPointsForEveryThing();

/*	for(int ii =0; ii< datarefsThatGetMeasured.size(); ii++)
	{
		dpMeasured.push_back(DataPoint( datarefsThatGetMeasured[ii]));
	}*/

	for(int ii =0; ii< datarefsThatGetChanged.size(); ii++)
	{
		dpChanged.push_back(DataPoint( datarefsThatGetChanged[ii]));
	}

	for(int ii =0; ii< datarefsThatHaveBeenLearned.size(); ii++)
	{
		dpLearned.push_back(DataPoint( datarefsThatHaveBeenLearned[ii]));
		dpRead.push_back(vector<DataPoint>());
		for(int jj =0; jj< datarefsReadForTheDecisions[ii].size(); jj++)
		{
			dpRead[ii].push_back(datarefsReadForTheDecisions[ii][jj]);
		}
	}
}

// case XML is reloaded would be be bad to fill vetors with more and more stuff
void clearAllGlobalVectors()
{
	datarefsThatGetResetPerRun.clear();
	dpPerRun.clear();
	datarefsThatGetResetPerRunValues.clear();
	datarefsThatGetResetPerRecord.clear();
	dpPerRecord.clear();
	datarefsThatGetResetPerRecordValues.clear();
	datarefsThatGetResetPerStep.clear();
	dpPerStep.clear();
	datarefsThatGetResetPerStepValues.clear();
	datarefsThatGetMeasured.clear();
	dpMeasured.clear();
	datarefsThatGetChanged.clear();
	dpChanged.clear();
	valuesThatCanBeChosen.clear();
	datarefsThatHaveBeenLearned.clear();
	dpLearned.clear();
	datarefsReadForTheDecisions.clear(); 
	dpRead.clear();
	weightsForLearnedDatarefs.clear();
	valuesThatCanBeChosenForLearnedDatarefs.clear();
	buttonsPressedPerRun.clear();
	buttonsPressedPerRecord.clear();
	buttonsPressedPerStep.clear();
	keysPressedPerRun.clear();
	keysPressedPerRecord.clear();
	keysPressedPerStep.clear();
}
// reads in the XML from the passed in filename
void loadXML(const char* pFilename)
{
	clearAllGlobalVectors();
	TiXmlDocument doc(pFilename);
	if (!doc.LoadFile()) return; // if there is no file it breaks
	TiXmlHandle hDoc(&doc); 
	TiXmlHandle hRoot(0);
	TiXmlElement* pElem=hDoc.FirstChildElement().Element();
	// should always have a valid root but handle gracefully if it does
	if (!pElem) return; 
	hRoot=TiXmlHandle(pElem);
	//TiXmlElement* aElement = hRoot.FirstChildElement("learned").ToElement();
	TiXmlElement* aElement =  hRoot.FirstChild("learned").FirstChild().Element();
	TiXmlElement* dfe;
	for(;aElement; aElement=aElement->NextSiblingElement())
	{
		datarefsThatHaveBeenLearned.push_back(aElement->Attribute("dataref"));
		dfe = TiXmlHandle(aElement).FirstChildElement("listref").FirstChildElement().ToElement();
		datarefsReadForTheDecisions.push_back(vector<string>());		
		for(; dfe; dfe=dfe->NextSiblingElement())
		{
			datarefsReadForTheDecisions.back().push_back(dfe->GetText());
		}
		dfe =  TiXmlHandle(aElement).FirstChild("listoptions").FirstChild().Element();
		valuesThatCanBeChosenForLearnedDatarefs.push_back(vector<double>());
		for( ; dfe; dfe=dfe->NextSiblingElement())
		{
			valuesThatCanBeChosenForLearnedDatarefs.back().push_back(atof(dfe->GetText()));
		}  
		dfe =  TiXmlHandle(aElement).FirstChild("listsweights").FirstChild().Element();

		weightsForLearnedDatarefs.push_back(vector< vector<double> >());

		for( ; dfe; dfe=dfe->NextSiblingElement())   
		{  
			TiXmlElement* tfe = TiXmlHandle(dfe).FirstChild().Element();
			weightsForLearnedDatarefs.back().push_back(vector<double>());

			for( ; tfe; tfe=tfe->NextSiblingElement())   
			{
				weightsForLearnedDatarefs.back().back().push_back(atof(tfe->GetText()));
			}
		} 
	}
	
	aElement = hRoot.FirstChild("samples").FirstChild().Element();
	for( ; aElement; aElement=aElement->NextSiblingElement())
	{
		datarefsThatGetChanged.push_back(aElement->Attribute("dataref"));
		dfe =  TiXmlHandle(aElement).FirstChild("listoptions").FirstChild().Element();
		valuesThatCanBeChosen.push_back(vector<double>());
		for(; dfe; dfe=dfe->NextSiblingElement())   
		{  
			valuesThatCanBeChosen.back().push_back(atof(dfe->GetText()));
		}
	}
	aElement = hRoot.FirstChild("stepresets").FirstChild().Element();
	for( ; aElement; aElement=aElement->NextSiblingElement())
	{
		datarefsThatGetResetPerStep.push_back(aElement->Attribute("dataref"));
		datarefsThatGetResetPerStepValues.push_back(atof(aElement->Attribute("value")));
	}
	aElement = hRoot.FirstChild("recordresets").FirstChild().Element();
	for(; aElement; aElement=aElement->NextSiblingElement())
	{
		datarefsThatGetResetPerRecord.push_back(aElement->Attribute("dataref"));
		datarefsThatGetResetPerRecordValues.push_back(atof(aElement->Attribute("value")));
	}
	aElement = hRoot.FirstChild("runresets").FirstChild().Element();
	for(; aElement; aElement=aElement->NextSiblingElement())
	{
		datarefsThatGetResetPerRun.push_back(aElement->Attribute("dataref"));
		datarefsThatGetResetPerRunValues.push_back(atof(aElement->Attribute("value")));
	}
	aElement = hRoot.FirstChild("measures").FirstChild().Element();
	for(; aElement; aElement=aElement->NextSiblingElement())
		datarefsThatGetMeasured.push_back(aElement->GetText());

	aElement = hRoot.FirstChild("runbuttons").FirstChild().Element();
	for(; aElement; aElement=aElement->NextSiblingElement())
	{  
		buttonsPressedPerRun.push_back(findButtonInt(aElement->GetText()));
	}

	aElement = hRoot.FirstChild("recordbuttons").FirstChild().Element();
	for(; aElement; aElement=aElement->NextSiblingElement())
	{  
		buttonsPressedPerRecord.push_back(findButtonInt(aElement->GetText()));
	}

	aElement = hRoot.FirstChild("stepbuttons").FirstChild().Element();
	for(; aElement; aElement=aElement->NextSiblingElement())
	{  
		buttonsPressedPerStep.push_back(findButtonInt(aElement->GetText()));
	}

	aElement = hRoot.FirstChild("runkeys").FirstChild().Element();
	for(; aElement; aElement=aElement->NextSiblingElement())
	{  
		keysPressedPerRun.push_back(findKeyInt(aElement->GetText()));
	}

	aElement = hRoot.FirstChild("recordkeys").FirstChild().Element();
	for(; aElement; aElement=aElement->NextSiblingElement())
	{  
		keysPressedPerRecord.push_back(findKeyInt(aElement->GetText()));
	}

	aElement = hRoot.FirstChild("stepkeys").FirstChild().Element();
	for(; aElement; aElement=aElement->NextSiblingElement())
	{  
		keysPressedPerStep.push_back(findKeyInt(aElement->GetText()));
	}

	// needs to read in the settings 
	aElement = hRoot.FirstChildElement("settings").Element(); 
	pluginName = aElement->Attribute("name");
	recordRate = atof(aElement->Attribute("recordRate"));
	stepRate = atof(aElement->Attribute("stepRate")); 
	
	string trueStr = "true";

	reloadEveryRun = (trueStr.compare(toLower(aElement->Attribute("reloadEveryRun"))) == 0);
	reloadOnChange =  (trueStr.compare(toLower(aElement->Attribute("reloadEveryChange"))) == 0);
	debug = (trueStr.compare(toLower(aElement->Attribute("debug"))) == 0);
	
	// make the vectors of datapoints from the vectors of strings 
	covertToData();
}

// print the data read from the if needed to XML 
// used to see what is read in
void debugXML()
{
	cout << "These get reset per run\n";
	for(unsigned int ii = 0; ii < datarefsThatGetResetPerRun.size(); ii++)
		cout << datarefsThatGetResetPerRun[ii]  << "\n";

	cout << "Values they get assigned\n";
	for(unsigned int ii = 0; ii < datarefsThatGetResetPerRunValues.size(); ii++)
		cout << datarefsThatGetResetPerRunValues[ii]  << "\n";

	cout << "These get reset per record\n";
	for(unsigned int ii = 0; ii < datarefsThatGetResetPerRecord.size(); ii++)
		cout << datarefsThatGetResetPerRecord[ii]  << "\n";

	cout << "Values they get assigned\n";
	for(unsigned int ii = 0; ii < datarefsThatGetResetPerRecordValues.size(); ii++)
		cout << datarefsThatGetResetPerRecordValues[ii]  << "\n";

	cout << "These get reset per step\n";
	for(unsigned int ii = 0; ii < datarefsThatGetResetPerStep.size(); ii++)
		cout << datarefsThatGetResetPerStep[ii]  << "\n";

	cout << "Values they get assigned\n";
	for(unsigned int ii = 0; ii < datarefsThatGetResetPerStepValues.size(); ii++)
		cout << datarefsThatGetResetPerStepValues[ii]  << "\n";

	cout << "Things that get measured\n";  
	for(unsigned int ii = 0; ii < datarefsThatGetMeasured.size(); ii++)
		cout << datarefsThatGetMeasured[ii]  << "\n";

	cout << "Things that get changed\n";
	for(unsigned int ii = 0; ii < datarefsThatGetChanged.size(); ii++)
	{
		cout << datarefsThatGetChanged[ii]  << ": ";
		for(unsigned int jj = 0; jj < valuesThatCanBeChosen[ii].size(); jj++)
			cout << valuesThatCanBeChosen[ii][jj]  << " ";
		cout << "\n";
	}

	cout << "Values that have been learned\n";
	for(unsigned int ii = 0; ii < datarefsThatHaveBeenLearned.size(); ii++)
	{    
		cout << datarefsThatHaveBeenLearned[ii]  << ": ";
		for(unsigned int jj = 0; jj < datarefsReadForTheDecisions[ii].size(); jj++)
		{
			cout << datarefsReadForTheDecisions[ii][jj]  << " ";
			cout << weightsForLearnedDatarefs[ii][jj][0]  << " ";
		}
		cout << "These are the choices\n";
		for(unsigned int jj = 0; jj < valuesThatCanBeChosenForLearnedDatarefs[ii].size(); jj++)
			cout << valuesThatCanBeChosenForLearnedDatarefs[ii][jj]  << "\n";
	} 

	cout << "Settings\n";
	cout << pluginName << endl;
	cout << recordRate << endl;
	cout << stepRate << endl;
	cout << reloadEveryRun << endl;
	cout << reloadOnChange << endl;
	cout << debug << endl;
}

// register a callback for every loop so at the step interval the
// plugin can interact with the simulator
static float MyFlightLoopCallback(float inElapsedSinceLastCall, 
		float  inElapsedTimeSinceLastFlightLoop, 
		int inCounter, void *  inRefcon);

// itilizes the plugin 
// first part of the code called by Xplane
PLUGIN_API int XPluginStart(char *	outName, char *	outSig, char *outDesc)
{
	// make the vectors needed to lookup the button and key numbers 
	makecmdButtonArray();
	makecmdKeyArray();
	// read in the data from "config.xml"
	loadXML(xmlFileName.c_str());	

	char    outputPath[255];

	// data for Xplane to read describing what the plugin is
	strcpy(outName, pluginName.c_str());
	strcpy(outSig, "xplanesdk.USNA.MachineLearning");
	strcpy(outDesc, "A plugin that reads config.xml for Machine Learning.");


	XPLMGetSystemPath(outputPath);
	strcat(outputPath, "log.txt");

	// sets the random number generator for making guesses
	srand ( time(NULL) );

	// tell xplane what to start calling and ho often to call it
	XPLMRegisterFlightLoopCallback(MyFlightLoopCallback,stepRate,NULL);

	return 1;
}

// run when Xplane is turned off
PLUGIN_API void	XPluginStop(void)
{
	// tell Xplane that it can stop looping
	XPLMUnregisterFlightLoopCallback(MyFlightLoopCallback, NULL);
}

// need to have it 
PLUGIN_API void XPluginDisable(void)
{

}

PLUGIN_API int XPluginEnable(void)
{
	return 1;
}

// handles messages passed from other processes and threads in Xplane
PLUGIN_API void XPluginReceiveMessage(XPLMPluginID	inFromWho, long inMessage, void * inParam)
{
	// 102 and 101 are sent when the plane crashes or starts out
	// used to so Xplane knows when a new run starts
	if(inMessage == 101 || inMessage == 102)
	{
		isFirst = true;
	}
}

// moves the plane to a given x y and z
// only works in the local area 
// limited to about 1000m  in every direction
PLUGIN_API void movePlane(double x,double y,double z)
{
	XPLMSetDataf(XPLMFindDataRef("sim/flightmodel/position/local_x"),x);
	XPLMSetDataf(XPLMFindDataRef("sim/flightmodel/position/local_y"),y);
	XPLMSetDataf(XPLMFindDataRef("sim/flightmodel/position/local_z"),z);
}

void printStartLine()
{
	if(dpMeasured.size()==0)
		return;
	int ii =0;
	for (ii =0; ii< dpMeasured.size(); ii++)
		cout << dpMeasured[ii].name << ", ";

	for (ii =0; ii< dpChanged.size() - 1; ii++)
	{
		cout << dpChanged[ii].name << ", ";
	}

	cout << dpChanged[ii].name << ", " << "\n";
}

// this is the loop that is called on the step interval
float	MyFlightLoopCallback( float inElapsedSinceLastCall, float inElapsedTimeSinceLastFlightLoop,
		int inCounter, void * inRefcon)
{
	// is the first run through the loop
	if(isStart)
	{
		isStart = false;
		printStartLine();
	}
	// isFirst is set by the message handlers
	if(isFirst)
	{
		// take care of all run actions 
		pressKeys(keysPressedPerRun);
		pressButtons(buttonsPressedPerRun);
		resetDPs(dpPerRun,  datarefsThatGetResetPerRunValues);
		// will reload the XML every run if set in the intail XML
		// usefull to fix problems with experiment configuration
		if(debug)
		{
			debugXML();
		}
		if(reloadEveryRun)
		{
			loadXML(xmlFileName.c_str());
		}
		timeFactor = XPLMGetElapsedTime();
		isFirst = false;
		runwayElevation = XPLMGetDataf(XPLMFindDataRef("sim/flightmodel/position/elevation"));
		xplround = 0;
		int count =0;
	}

	// take care of all step actions
	resetDPs(dpPerStep,  datarefsThatGetResetPerStepValues);
	pressKeys(keysPressedPerStep);
	pressButtons(buttonsPressedPerStep);
	if(stepsum>recordRate)
	{
		stepsum = 0;
		// take care of all record options
		resetDPs(dpPerRecord,  datarefsThatGetResetPerRecordValues);
		pressKeys(keysPressedPerRecord);
		pressButtons(buttonsPressedPerRecord);
		makeGuesses();
		makeChoices();
	}

	xplround++;
	stepsum += stepRate;
	return stepRate; // tell xplane to call back in <steoRate> seconds
}                                   
